{"ast":null,"code":"import moment from 'moment';\nmoment.updateLocale('en', {\n  relativeTime: {\n    future: 'in %s',\n    past: '%s ago',\n    s: 'a few seconds',\n    m: 'a minute',\n    mm: '%d minutes',\n    h: 'an hour',\n    hh: '%d hours',\n    d: 'a day',\n    dd: function dd(number) {\n      if (number < 7) {\n        return \"\".concat(number, \" days\"); // Moment uses \"d\" when it's just 1 day.\n      }\n\n      var weeks = Math.round(number / 7);\n      return \"\".concat(weeks, \" \").concat(weeks > 1 ? 'weeks' : 'week');\n    },\n    M: 'a month',\n    MM: '%d months',\n    y: 'a year',\n    yy: '%d years'\n  }\n});\n\nfunction descendingComparator(a, b, orderBy) {\n  if (orderBy !== 'date') {\n    if (b[orderBy] < a[orderBy]) {\n      return -1;\n    }\n\n    if (b[orderBy] > a[orderBy]) {\n      return 1;\n    }\n\n    return 0;\n  }\n\n  return 0;\n}\n\nexport function getComparator(order, orderBy) {\n  return order === 'desc' ? function (a, b) {\n    return descendingComparator(a, b, orderBy);\n  } : function (a, b) {\n    return -descendingComparator(a, b, orderBy);\n  };\n}\nexport function stableSort(array, comparator, orderBy, dateorder) {\n  if (orderBy !== 'date') {\n    var _stabilizedThis = array.map(function (el, index) {\n      return [el, index];\n    });\n\n    _stabilizedThis.sort(function (a, b) {\n      var order = comparator(a[0], b[0]);\n\n      if (order !== 0) {\n        return order;\n      }\n\n      return a[1] - b[1];\n    });\n\n    return _stabilizedThis.map(function (el) {\n      return el[0];\n    });\n  }\n\n  var stabilizedThis = array.map(function (el, index) {\n    return [el, index];\n  });\n  stabilizedThis.sort(function (a, b) {\n    var dateA = new Date(a[0].date);\n    var dateB = new Date(b[0].date);\n\n    if (dateorder === 'desc') {\n      return dateB - dateA;\n    }\n\n    return dateA - dateB;\n  });\n  return stabilizedThis.map(function (el) {\n    return el[0];\n  });\n}","map":{"version":3,"sources":["/home/asherphilip/Documents/autographa/renderer/src/components/ProjectsPage/Projects/SortingHelper.js"],"names":["moment","updateLocale","relativeTime","future","past","s","m","mm","h","hh","d","dd","number","weeks","Math","round","M","MM","y","yy","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","dateorder","stabilizedThis","map","el","index","sort","dateA","Date","date","dateB"],"mappings":"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","sourcesContent":["import moment from 'moment';\n\nmoment.updateLocale('en', {\n  relativeTime: {\n    future: 'in %s',\n    past: '%s ago',\n    s: 'a few seconds',\n    m: 'a minute',\n    mm: '%d minutes',\n    h: 'an hour',\n    hh: '%d hours',\n    d: 'a day',\n    dd(number) {\n      if (number < 7) {\n        return `${number} days`; // Moment uses \"d\" when it's just 1 day.\n      }\n      const weeks = Math.round(number / 7);\n      return `${weeks} ${weeks > 1 ? 'weeks' : 'week'}`;\n    },\n    M: 'a month',\n    MM: '%d months',\n    y: 'a year',\n    yy: '%d years',\n  },\n});\n\nfunction descendingComparator(a, b, orderBy) {\n  if (orderBy !== 'date') {\n    if (b[orderBy] < a[orderBy]) {\n      return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n      return 1;\n    }\n    return 0;\n  }\n  return 0;\n}\n\nexport function getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nexport function stableSort(array, comparator, orderBy, dateorder) {\n  if (orderBy !== 'date') {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n      const order = comparator(a[0], b[0]);\n      if (order !== 0) { return order; }\n      return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n  }\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const dateA = new Date(a[0].date);\n    const dateB = new Date(b[0].date);\n    if (dateorder === 'desc') { return dateB - dateA; }\n    return dateA - dateB;\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n"]},"metadata":{},"sourceType":"module"}