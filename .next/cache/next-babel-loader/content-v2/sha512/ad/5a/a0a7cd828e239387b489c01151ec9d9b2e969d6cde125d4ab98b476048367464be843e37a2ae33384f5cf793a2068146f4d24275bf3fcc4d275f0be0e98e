{"ast":null,"code":"var _jsxFileName = \"/home/asherphilip/Documents/autographa/renderer/src/components/ProjectsPage/CreateProject/LicenseSelection.js\";\nvar __jsx = React.createElement;\n\n/* eslint-disable import/no-dynamic-require */\n\n/* eslint-disable global-require */\n// @flow\nimport { Box, FormControl, FormLabel, MenuItem, Select } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { MDEditor } from '../../MdEditor/MDEditor';\nimport { CreateProjectStyles } from './useStyles/CreateProjectStyles';\nimport * as logger from '../../../logger';\nconst licenseItems = [{\n  id: 'BY',\n  license: 'Attribution'\n}, {\n  id: 'BY_ND',\n  license: 'Attribution-NoDerivatives'\n}, {\n  id: 'BY_NC',\n  license: 'Attribution-NonCommercial'\n}, {\n  id: 'BY_SA',\n  license: 'Attribution-ShareAlike'\n}, {\n  id: 'BY_NC_SA',\n  license: 'Attribution-NonCommercial-ShareAlike'\n}, {\n  id: 'BY_NC_ND',\n  license: 'Attribution-NonCommercial-NoDerivatives'\n}, {\n  id: 'CC0',\n  license: 'CC0'\n}, {\n  id: 'Custom',\n  license: 'Custom'\n}];\nexport const LicenseSelection = ({\n  openmdviewer,\n  setopenmdviewer\n}) => {\n  const classes = CreateProjectStyles();\n  const [selectedLicense, setselectedLicense] = React.useState(licenseItems[0].id);\n  const [updatelicenseItems] = React.useState(licenseItems);\n  const [filePath, setFilePath] = React.useState();\n  React.useEffect(() => {\n    logger.debug('markdownviewer.js', `extracting text from files ${selectedLicense} on selection`);\n\n    const licensefile = require(`../../../lib/license/${selectedLicense}.md`);\n\n    setFilePath(licensefile.default);\n  }, [setFilePath, selectedLicense]);\n\n  const handleMdViewer = event => {\n    setselectedLicense(event.target.value);\n    setopenmdviewer(true);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(FormControl, {\n    className: classes.license,\n    component: \"fieldset\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, __jsx(FormLabel, {\n    component: \"legend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, __jsx(Box, {\n    fontWeight: 600,\n    m: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, \"License\")), __jsx(Select, {\n    className: classes.licenseselect,\n    variant: \"outlined\",\n    value: selectedLicense,\n    onChange: event => handleMdViewer(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, updatelicenseItems.map(license => __jsx(MenuItem, {\n    value: license.id,\n    key: license.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, license.license)))), __jsx(MDEditor, {\n    openMDFile: openmdviewer,\n    setopenMDFile: setopenmdviewer,\n    mdFilePath: filePath,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }));\n};\nLicenseSelection.propTypes = {\n  openmdviewer: PropTypes.bool.isRequired,\n  setopenmdviewer: PropTypes.func\n};","map":{"version":3,"sources":["/home/asherphilip/Documents/autographa/renderer/src/components/ProjectsPage/CreateProject/LicenseSelection.js"],"names":["Box","FormControl","FormLabel","MenuItem","Select","PropTypes","React","MDEditor","CreateProjectStyles","logger","licenseItems","id","license","LicenseSelection","openmdviewer","setopenmdviewer","classes","selectedLicense","setselectedLicense","useState","updatelicenseItems","filePath","setFilePath","useEffect","debug","licensefile","require","default","handleMdViewer","event","target","value","licenseselect","map","propTypes","bool","isRequired","func"],"mappings":"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","sourcesContent":["/* eslint-disable import/no-dynamic-require */\n/* eslint-disable global-require */\n// @flow\nimport {\n  Box,\n  FormControl,\n  FormLabel,\n  MenuItem,\n  Select,\n} from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { MDEditor } from '../../MdEditor/MDEditor';\nimport { CreateProjectStyles } from './useStyles/CreateProjectStyles';\nimport * as logger from '../../../logger';\n\nconst licenseItems = [\n  { id: 'BY', license: 'Attribution' },\n  { id: 'BY_ND', license: 'Attribution-NoDerivatives' },\n  { id: 'BY_NC', license: 'Attribution-NonCommercial' },\n  { id: 'BY_SA', license: 'Attribution-ShareAlike' },\n  { id: 'BY_NC_SA', license: 'Attribution-NonCommercial-ShareAlike' },\n  { id: 'BY_NC_ND', license: 'Attribution-NonCommercial-NoDerivatives' },\n  { id: 'CC0', license: 'CC0' },\n  { id: 'Custom', license: 'Custom' },\n];\n\nexport const LicenseSelection = ({ openmdviewer, setopenmdviewer }) => {\n  const classes = CreateProjectStyles();\n  const [selectedLicense, setselectedLicense] = React.useState(\n    licenseItems[0].id,\n  );\n  const [updatelicenseItems] = React.useState(licenseItems);\n  const [filePath, setFilePath] = React.useState();\n\n  React.useEffect(() => {\n    logger.debug(\n      'markdownviewer.js', `extracting text from files ${selectedLicense} on selection`,\n    );\n    const licensefile = require(`../../../lib/license/${selectedLicense}.md`);\n    setFilePath(licensefile.default);\n  }, [setFilePath, selectedLicense]);\n\n  const handleMdViewer = (event) => {\n    setselectedLicense(event.target.value);\n    setopenmdviewer(true);\n  };\n\n  return (\n    <>\n      <FormControl className={classes.license} component=\"fieldset\">\n        <FormLabel component=\"legend\">\n          <Box fontWeight={600} m={1}>\n            License\n          </Box>\n        </FormLabel>\n        <Select\n          className={classes.licenseselect}\n          variant=\"outlined\"\n          value={selectedLicense}\n          onChange={(event) => handleMdViewer(event)}\n        >\n          {updatelicenseItems.map((license) => (\n            <MenuItem value={license.id} key={license.id}>\n              {license.license}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <MDEditor\n        openMDFile={openmdviewer}\n        setopenMDFile={setopenmdviewer}\n        mdFilePath={filePath}\n      />\n    </>\n  );\n};\n\nLicenseSelection.propTypes = {\n  openmdviewer: PropTypes.bool.isRequired,\n  setopenmdviewer: PropTypes.func,\n};\n"]},"metadata":{},"sourceType":"module"}