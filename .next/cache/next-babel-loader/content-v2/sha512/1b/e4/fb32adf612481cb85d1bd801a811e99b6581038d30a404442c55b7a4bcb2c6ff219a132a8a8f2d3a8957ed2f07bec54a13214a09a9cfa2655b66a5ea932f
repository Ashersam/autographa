{"ast":null,"code":"import _slicedToArray from \"/home/asherphilip/Documents/autographa/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/asherphilip/Documents/autographa/renderer/src/components/ProjectsPage/CreateProject/LicenseSelection.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\n/* eslint-disable import/no-dynamic-require */\n\n/* eslint-disable global-require */\n// @flow\nimport { Box, FormControl, FormLabel, MenuItem, Select } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { MDEditor } from '../../MdEditor/MDEditor';\nimport { CreateProjectStyles } from './useStyles/CreateProjectStyles';\nimport * as logger from '../../../logger';\nvar licenseItems = [{\n  id: 'BY',\n  license: 'Attribution'\n}, {\n  id: 'BY_ND',\n  license: 'Attribution-NoDerivatives'\n}, {\n  id: 'BY_NC',\n  license: 'Attribution-NonCommercial'\n}, {\n  id: 'BY_SA',\n  license: 'Attribution-ShareAlike'\n}, {\n  id: 'BY_NC_SA',\n  license: 'Attribution-NonCommercial-ShareAlike'\n}, {\n  id: 'BY_NC_ND',\n  license: 'Attribution-NonCommercial-NoDerivatives'\n}, {\n  id: 'CC0',\n  license: 'CC0'\n}, {\n  id: 'Custom',\n  license: 'Custom'\n}];\nexport var LicenseSelection = function LicenseSelection(_ref) {\n  _s();\n\n  var openmdviewer = _ref.openmdviewer,\n      setopenmdviewer = _ref.setopenmdviewer;\n  var classes = CreateProjectStyles();\n\n  var _React$useState = React.useState(licenseItems[0].id),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      selectedLicense = _React$useState2[0],\n      setselectedLicense = _React$useState2[1];\n\n  var _React$useState3 = React.useState(licenseItems),\n      _React$useState4 = _slicedToArray(_React$useState3, 1),\n      updatelicenseItems = _React$useState4[0];\n\n  var _React$useState5 = React.useState(),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      filePath = _React$useState6[0],\n      setFilePath = _React$useState6[1];\n\n  React.useEffect(function () {\n    logger.debug('markdownviewer.js', \"extracting text from files \".concat(selectedLicense, \" on selection\"));\n\n    var licensefile = require(\"../../../lib/license/\".concat(selectedLicense, \".md\"));\n\n    setFilePath(licensefile[\"default\"]);\n  }, [setFilePath, selectedLicense]);\n\n  var handleMdViewer = function handleMdViewer(event) {\n    setselectedLicense(event.target.value);\n    setopenmdviewer(true);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(FormControl, {\n    className: classes.license,\n    component: \"fieldset\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, __jsx(FormLabel, {\n    component: \"legend\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, __jsx(Box, {\n    fontWeight: 600,\n    m: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, \"License\")), __jsx(Select, {\n    className: classes.licenseselect,\n    variant: \"outlined\",\n    value: selectedLicense,\n    onChange: function onChange(event) {\n      return handleMdViewer(event);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, updatelicenseItems.map(function (license) {\n    return __jsx(MenuItem, {\n      value: license.id,\n      key: license.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, license.license);\n  }))), __jsx(MDEditor, {\n    openMDFile: openmdviewer,\n    setopenMDFile: setopenmdviewer,\n    mdFilePath: filePath,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(LicenseSelection, \"lx5c6OChcXm/35eUNoZ4EbR+7lE=\");\n\n_c = LicenseSelection;\nLicenseSelection.propTypes = {\n  openmdviewer: PropTypes.bool.isRequired,\n  setopenmdviewer: PropTypes.func\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"LicenseSelection\");","map":{"version":3,"sources":["/home/asherphilip/Documents/autographa/renderer/src/components/ProjectsPage/CreateProject/LicenseSelection.js"],"names":["Box","FormControl","FormLabel","MenuItem","Select","PropTypes","React","MDEditor","CreateProjectStyles","logger","licenseItems","id","license","LicenseSelection","openmdviewer","setopenmdviewer","classes","useState","selectedLicense","setselectedLicense","updatelicenseItems","filePath","setFilePath","useEffect","debug","licensefile","require","handleMdViewer","event","target","value","licenseselect","map","propTypes","bool","isRequired","func"],"mappings":"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","sourcesContent":["/* eslint-disable import/no-dynamic-require */\n/* eslint-disable global-require */\n// @flow\nimport {\n  Box,\n  FormControl,\n  FormLabel,\n  MenuItem,\n  Select,\n} from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { MDEditor } from '../../MdEditor/MDEditor';\nimport { CreateProjectStyles } from './useStyles/CreateProjectStyles';\nimport * as logger from '../../../logger';\n\nconst licenseItems = [\n  { id: 'BY', license: 'Attribution' },\n  { id: 'BY_ND', license: 'Attribution-NoDerivatives' },\n  { id: 'BY_NC', license: 'Attribution-NonCommercial' },\n  { id: 'BY_SA', license: 'Attribution-ShareAlike' },\n  { id: 'BY_NC_SA', license: 'Attribution-NonCommercial-ShareAlike' },\n  { id: 'BY_NC_ND', license: 'Attribution-NonCommercial-NoDerivatives' },\n  { id: 'CC0', license: 'CC0' },\n  { id: 'Custom', license: 'Custom' },\n];\n\nexport const LicenseSelection = ({ openmdviewer, setopenmdviewer }) => {\n  const classes = CreateProjectStyles();\n  const [selectedLicense, setselectedLicense] = React.useState(\n    licenseItems[0].id,\n  );\n  const [updatelicenseItems] = React.useState(licenseItems);\n  const [filePath, setFilePath] = React.useState();\n\n  React.useEffect(() => {\n    logger.debug(\n      'markdownviewer.js', `extracting text from files ${selectedLicense} on selection`,\n    );\n    const licensefile = require(`../../../lib/license/${selectedLicense}.md`);\n    setFilePath(licensefile.default);\n  }, [setFilePath, selectedLicense]);\n\n  const handleMdViewer = (event) => {\n    setselectedLicense(event.target.value);\n    setopenmdviewer(true);\n  };\n\n  return (\n    <>\n      <FormControl className={classes.license} component=\"fieldset\">\n        <FormLabel component=\"legend\">\n          <Box fontWeight={600} m={1}>\n            License\n          </Box>\n        </FormLabel>\n        <Select\n          className={classes.licenseselect}\n          variant=\"outlined\"\n          value={selectedLicense}\n          onChange={(event) => handleMdViewer(event)}\n        >\n          {updatelicenseItems.map((license) => (\n            <MenuItem value={license.id} key={license.id}>\n              {license.license}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <MDEditor\n        openMDFile={openmdviewer}\n        setopenMDFile={setopenmdviewer}\n        mdFilePath={filePath}\n      />\n    </>\n  );\n};\n\nLicenseSelection.propTypes = {\n  openmdviewer: PropTypes.bool.isRequired,\n  setopenmdviewer: PropTypes.func,\n};\n"]},"metadata":{},"sourceType":"module"}