{"ast":null,"code":"import _extends from \"/home/asherphilip/Documents/autographa/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"/home/asherphilip/Documents/autographa/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/asherphilip/Documents/autographa/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/home/asherphilip/Documents/autographa/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/asherphilip/Documents/autographa/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/asherphilip/Documents/autographa/renderer/src/components/Login/Login.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Paper, Grid, Tabs, Tab, FormControl, Typography } from '@material-ui/core'; // import * as localForage from 'localforage';\n\nimport { useRouter } from 'next/router';\nimport * as logger from '../../logger';\nimport { isElectron } from '../../core/handleElectron';\nimport CustomLogin from './CustomLogin';\nimport { AuthenticationContext } from './AuthenticationContextProvider'; // import { createUser, handleLogin } from '../../core/handleLogin';\n\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      height: '100vh',\n      overflow: 'hidden'\n    },\n    paper: {\n      margin: theme.spacing(8, 4),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      textAlign: 'center'\n    },\n    margin: {\n      margin: theme.spacing(1)\n    }\n  };\n});\n\nfunction a11yProps(index) {\n  return {\n    id: \"simple-tab-\".concat(index),\n    'aria-controls': \"simple-tabpanel-\".concat(index)\n  };\n}\n\nexport default function Login() {\n  _s();\n\n  var router = useRouter();\n  var classes = useStyles();\n  var online = {\n    textfield: {\n      count: [{\n        label: 'Username',\n        type: 'text',\n        name: 'identifier'\n      }, {\n        label: 'Password',\n        type: 'password',\n        name: 'password'\n      }]\n    },\n    viewForgot: true\n  };\n  var offline = {\n    autocomplete: {\n      count: [{\n        label: 'Username'\n      }]\n    },\n    viewForgot: false\n  };\n  var tab = React.useState(!!isElectron()); // eslint-disable-next-line no-unused-vars\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      users = _React$useState2[0],\n      setUsers = _React$useState2[1];\n\n  var _React$useContext = React.useContext(AuthenticationContext),\n      config = _React$useContext.states.config;\n\n  var _React$useState3 = React.useState(0),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      tabvalue = _React$useState4[0],\n      setTabValue = _React$useState4[1];\n\n  var _React$useState5 = React.useState(isElectron() ? offline : online),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      ui = _React$useState6[0],\n      setUi = _React$useState6[1];\n\n  var _React$useState7 = React.useState({\n    username: false,\n    password: false\n  }),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      valid = _React$useState8[0],\n      setValid = _React$useState8[1];\n\n  var _React$useState9 = React.useState(),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      errorMsg = _React$useState10[0],\n      setErrorMsg = _React$useState10[1]; // eslint-disable-next-line no-unused-vars\n\n\n  var _React$useState11 = React.useState(),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      token = _React$useState12[0],\n      setToken = _React$useState12[1];\n\n  var _React$useState13 = React.useState({\n    identifier: '',\n    password: '',\n    msg: ''\n  }),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      error = _React$useState14[0],\n      setError = _React$useState14[1];\n\n  var handleChange = function handleChange(newValue) {\n    setTabValue(newValue);\n    setUi(newValue === 0 ? offline : online);\n  }; // The below code is commented for UI dev purpose.\n  // useEffect(() => {\n  //   if (users.length === 0) {\n  //     localForage.getItem('users').then((user) => {\n  //       if (user) {\n  //         setUsers(user);\n  //       }\n  //     });\n  //   }\n  // }, [users]);\n  // useEffect(() => {\n  //   if (!isElectron()) {\n  //     // window is accessible here.\n  //     const url = window.location.href;\n  //     const regex = /(.*)login\\?flow=/gm;\n  //     getConfig(url.replace(regex, ''));\n  //   }\n  // // eslint-disable-next-line react-hooks/exhaustive-deps\n  // }, []);\n\n\n  useEffect(function () {\n    if (config) {\n      var _config$messages, _config$messages$;\n\n      // eslint-disable-next-line prefer-const\n      var err = {};\n      err.msg = config === null || config === void 0 ? void 0 : (_config$messages = config.messages) === null || _config$messages === void 0 ? void 0 : (_config$messages$ = _config$messages[0]) === null || _config$messages$ === void 0 ? void 0 : _config$messages$.text;\n      config.fields.forEach(function (field) {\n        if (field.name === 'csrf_token') {\n          setToken(field.value);\n        } else {\n          var _field$messages;\n\n          err[field.name] = (_field$messages = field.messages) === null || _field$messages === void 0 ? void 0 : _field$messages[0].text;\n        }\n      });\n      setError(err);\n    }\n  }, [config]); // eslint-disable-next-line no-unused-vars\n\n  var handleValidation = function handleValidation(values) {\n    var user;\n\n    if (values.username) {\n      user = true;\n    } else {\n      setErrorMsg('Enter username');\n      user = false;\n    }\n\n    setValid(_objectSpread(_objectSpread({}, valid), {}, {\n      username: !user\n    }));\n    return user;\n  }; // eslint-disable-next-line no-unused-vars\n\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              logger.debug('Login.js', 'In handleSubmit');\n\n              if (isElectron() && tabvalue === 0) {\n                router.push('/main'); // The below code is commented for UI dev purpose.\n                // if (handleValidation(values)) {\n                //   const fs = window.require('fs');\n                //   logger.debug('Login.js',\n                // 'Triggers handleLogin to check whether the user is existing or not');\n                //   const user = handleLogin(users, values);\n                //   if (user) {\n                //     logger.debug('Login.js',\n                // 'Triggers generateToken to generate a Token for the user');\n                //     generateToken(user);\n                //   } else {\n                //     logger.debug('Login.js', 'Triggers createUser for creating a new user');\n                //     createUser(values, fs)\n                //       .then((val) => {\n                //         logger.debug('Login.js',\n                // 'Triggers generateToken to generate a Token for the user');\n                //         generateToken(val);\n                //       });\n                //   }\n                // }\n              } else {\n                // eslint-disable-next-line no-lonely-if\n                if (isElectron()) {\n                  router.push('/main'); // const requestOptions = {\n                  //   method: 'POST',\n                  //   headers: { 'Content-Type': 'application/json' },\n                  //   body: document.aglogin,\n                  // };\n                  // fetch(config?.action, requestOptions)\n                  //   .then((response) => response.json())\n                  //   .then((data) => console.log(data));\n                } else {\n                  router.push('/main'); // The below code is commented for UI dev purpose.\n                  // document.aglogin.action = config.action;\n                  // document.aglogin.method = config.method;\n                  // // eslint-disable-next-line prefer-const\n                  // let input = document.createElement('input');\n                  //   input.setAttribute('type', 'hidden');\n                  //   input.setAttribute('name', 'csrf_token');\n                  //   input.setAttribute('value', token);\n                  // document.aglogin.appendChild(input);\n                  // document.aglogin.submit();\n                } // router.push('/login');\n\n              }\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(React.Fragment, null, __jsx(Grid, {\n    container: true,\n    className: classes.root,\n    justify: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 8,\n    md: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  }, __jsx(Paper, {\n    className: classes.paper,\n    elevation: 5,\n    square: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 11\n    }\n  }, tab[0] && __jsx(Tabs, {\n    value: tabvalue,\n    title: \"OfflineOnline\",\n    \"data-testid\": \"tabs\",\n    indicatorColor: \"primary\",\n    textColor: \"primary\",\n    onChange: handleChange,\n    \"aria-label\": \"disabled tabs example\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  }, __jsx(Tab, _extends({\n    label: \"Offline\"\n  }, a11yProps(0), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 15\n    }\n  })), __jsx(Tab, _extends({\n    label: \"Online\"\n  }, a11yProps(1), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 15\n    }\n  }))), __jsx(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }\n  }, __jsx(Typography, {\n    variant: \"h5\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 15\n    }\n  }, \"Welcome!\"), __jsx(Typography, {\n    variant: \"subtitle2\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 15\n    }\n  }, \"Welcome back! Login to access Autographa\"), __jsx(Typography, {\n    color: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 15\n    }\n  }, errorMsg), __jsx(CustomLogin, {\n    ui: ui,\n    error: valid,\n    login: handleSubmit,\n    userlist: users,\n    validation: error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 15\n    }\n  }), (ui === null || ui === void 0 ? void 0 : ui.viewForgot) === true && __jsx(Typography, {\n    variant: \"caption\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 15\n    }\n  }, \"Don't have an account?\", __jsx(\"a\", {\n    \"data-testid\": \"signup\",\n    href: \"/signup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 17\n    }\n  }, \"Sign Up\")))))));\n}\n\n_s(Login, \"4DPrLTo4LaMGpat/oslFzS3jr20=\", false, function () {\n  return [useRouter, useStyles];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/asherphilip/Documents/autographa/renderer/src/components/Login/Login.js"],"names":["React","useEffect","makeStyles","Paper","Grid","Tabs","Tab","FormControl","Typography","useRouter","logger","isElectron","CustomLogin","AuthenticationContext","useStyles","theme","root","height","overflow","paper","margin","spacing","display","flexDirection","alignItems","textAlign","a11yProps","index","id","Login","router","classes","online","textfield","count","label","type","name","viewForgot","offline","autocomplete","tab","useState","users","setUsers","useContext","config","states","tabvalue","setTabValue","ui","setUi","username","password","valid","setValid","errorMsg","setErrorMsg","token","setToken","identifier","msg","error","setError","handleChange","newValue","err","messages","text","fields","forEach","field","value","handleValidation","values","user","handleSubmit","debug","push"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n    Paper, Grid, Tabs, Tab, FormControl, Typography,\n} from '@material-ui/core';\n// import * as localForage from 'localforage';\nimport { useRouter } from 'next/router';\nimport * as logger from '../../logger';\nimport { isElectron } from '../../core/handleElectron';\nimport CustomLogin from './CustomLogin';\nimport { AuthenticationContext } from './AuthenticationContextProvider';\n// import { createUser, handleLogin } from '../../core/handleLogin';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100vh',\n    overflow: 'hidden',\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    textAlign: 'center',\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n}));\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nexport default function Login() {\n  const router = useRouter();\n  const classes = useStyles();\n  const online = {\n    textfield: {\n      count: [{ label: 'Username', type: 'text', name: 'identifier' },\n      { label: 'Password', type: 'password', name: 'password' }],\n    },\n    viewForgot: true,\n  };\n  const offline = {\n    autocomplete: { count: [{ label: 'Username' }] },\n    viewForgot: false,\n  };\n  const tab = React.useState(!!isElectron());\n  // eslint-disable-next-line no-unused-vars\n  const [users, setUsers] = React.useState([]);\n  const {\n    states: { config },\n    // action: { generateToken, getConfig },\n  } = React.useContext(AuthenticationContext);\n  const [tabvalue, setTabValue] = React.useState(0);\n  const [ui, setUi] = React.useState(isElectron() ? offline : online);\n  const [valid, setValid] = React.useState({ username: false, password: false });\n  const [errorMsg, setErrorMsg] = React.useState();\n  // eslint-disable-next-line no-unused-vars\n  const [token, setToken] = React.useState();\n  const [error, setError] = React.useState({\n    identifier: '', password: '', msg: '',\n  });\n  const handleChange = (newValue) => {\n    setTabValue(newValue);\n    setUi(newValue === 0 ? offline : online);\n  };\n  // The below code is commented for UI dev purpose.\n  // useEffect(() => {\n  //   if (users.length === 0) {\n  //     localForage.getItem('users').then((user) => {\n  //       if (user) {\n  //         setUsers(user);\n  //       }\n  //     });\n  //   }\n  // }, [users]);\n  // useEffect(() => {\n  //   if (!isElectron()) {\n  //     // window is accessible here.\n  //     const url = window.location.href;\n  //     const regex = /(.*)login\\?flow=/gm;\n  //     getConfig(url.replace(regex, ''));\n  //   }\n  // // eslint-disable-next-line react-hooks/exhaustive-deps\n  // }, []);\n  useEffect(() => {\n    if (config) {\n      // eslint-disable-next-line prefer-const\n      let err = {};\n      err.msg = config?.messages?.[0]?.text;\n      (config.fields).forEach((field) => {\n        if (field.name === 'csrf_token') {\n          setToken(field.value);\n        } else {\n          err[field.name] = field.messages?.[0].text;\n        }\n      });\n      setError(err);\n    }\n  }, [config]);\n  // eslint-disable-next-line no-unused-vars\n  const handleValidation = (values) => {\n    let user;\n    if (values.username) {\n      user = true;\n    } else {\n      setErrorMsg('Enter username');\n      user = false;\n    }\n    setValid({ ...valid, username: !user });\n    return user;\n  };\n  // eslint-disable-next-line no-unused-vars\n  const handleSubmit = async (values) => {\n    logger.debug('Login.js', 'In handleSubmit');\n    if (isElectron() && tabvalue === 0) {\n      router.push('/main');\n      // The below code is commented for UI dev purpose.\n      // if (handleValidation(values)) {\n      //   const fs = window.require('fs');\n      //   logger.debug('Login.js',\n      // 'Triggers handleLogin to check whether the user is existing or not');\n      //   const user = handleLogin(users, values);\n      //   if (user) {\n      //     logger.debug('Login.js',\n      // 'Triggers generateToken to generate a Token for the user');\n      //     generateToken(user);\n      //   } else {\n      //     logger.debug('Login.js', 'Triggers createUser for creating a new user');\n      //     createUser(values, fs)\n      //       .then((val) => {\n      //         logger.debug('Login.js',\n      // 'Triggers generateToken to generate a Token for the user');\n      //         generateToken(val);\n      //       });\n      //   }\n      // }\n    } else {\n      // eslint-disable-next-line no-lonely-if\n      if (isElectron()) {\n        router.push('/main');\n        // const requestOptions = {\n        //   method: 'POST',\n        //   headers: { 'Content-Type': 'application/json' },\n        //   body: document.aglogin,\n        // };\n        // fetch(config?.action, requestOptions)\n        //   .then((response) => response.json())\n        //   .then((data) => console.log(data));\n      } else {\n        router.push('/main');\n        // The below code is commented for UI dev purpose.\n        // document.aglogin.action = config.action;\n        // document.aglogin.method = config.method;\n        // // eslint-disable-next-line prefer-const\n        // let input = document.createElement('input');\n        //   input.setAttribute('type', 'hidden');\n        //   input.setAttribute('name', 'csrf_token');\n        //   input.setAttribute('value', token);\n        // document.aglogin.appendChild(input);\n        // document.aglogin.submit();\n      }\n      // router.push('/login');\n    }\n  };\n  return (\n    <>\n      <Grid container className={classes.root} justify=\"flex-end\">\n        <Grid item xs={12} sm={8} md={5}>\n          <Paper className={classes.paper} elevation={5} square>\n            {tab[0] && (\n            <Tabs\n              value={tabvalue}\n              title=\"OfflineOnline\"\n              data-testid=\"tabs\"\n              indicatorColor=\"primary\"\n              textColor=\"primary\"\n              onChange={handleChange}\n              aria-label=\"disabled tabs example\"\n            >\n              <Tab label=\"Offline\" {...a11yProps(0)} />\n              <Tab label=\"Online\" {...a11yProps(1)} />\n            </Tabs>\n            )}\n            <FormControl>\n              <Typography variant=\"h5\" gutterBottom>\n                Welcome!\n              </Typography>\n              <Typography variant=\"subtitle2\" gutterBottom>\n                Welcome back! Login to access Autographa\n              </Typography>\n              <Typography color=\"error\">{errorMsg}</Typography>\n              <CustomLogin\n                ui={ui}\n                error={valid}\n                login={handleSubmit}\n                userlist={users}\n                validation={error}\n              />\n              {ui?.viewForgot === true && (\n              <Typography variant=\"caption\" gutterBottom>\n                Don&apos;t have an account?\n                <a data-testid=\"signup\" href=\"/signup\">Sign Up</a>\n              </Typography>\n                )}\n            </FormControl>\n          </Paper>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}