{"ast":null,"code":"import React from 'react';\nimport { countErrors, validateForm, validEmailRegex } from './helper';\nexport default function useValidator() {\n  const [formValid, setFormValid] = React.useState(false);\n  const [errorCount, setErrorCount] = React.useState(null);\n  const [errors, setErrors] = React.useState({\n    namefield: '',\n    lastname: '',\n    password: '',\n    email: ''\n  });\n\n  const handleFields = event => {\n    event.preventDefault();\n    const {\n      name,\n      value\n    } = event.target;\n\n    switch (name) {\n      case 'name':\n        errors.namefield = value.length < 5 ? 'Full Name must be 5 characters long!' : '';\n        break;\n\n      case 'email':\n        errors.email = validEmailRegex.test(value) ? '' : 'Email is not valid!';\n        break;\n\n      case 'password':\n        errors.password = value.length < 8 ? 'Password must be 8 characters long!' : '';\n        break;\n\n      default:\n        break;\n    }\n\n    setErrors(errors);\n  };\n\n  const handleSubmitFields = event => {\n    event.preventDefault();\n    setFormValid(validateForm(errors));\n    setErrorCount(countErrors(errors));\n  };\n\n  return {\n    state: {\n      formValid,\n      errorCount,\n      errors\n    },\n    action: {\n      setFormValid,\n      setErrorCount,\n      setErrors,\n      handleFields,\n      handleSubmitFields\n    }\n  };\n}","map":{"version":3,"sources":["/home/asherphilip/Documents/autographa/renderer/src/components/Validation/useValidator.js"],"names":["React","countErrors","validateForm","validEmailRegex","useValidator","formValid","setFormValid","useState","errorCount","setErrorCount","errors","setErrors","namefield","lastname","password","email","handleFields","event","preventDefault","name","value","target","length","test","handleSubmitFields","state","action"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,YAAtB,EAAoCC,eAApC,QAA2D,UAA3D;AAEA,eAAe,SAASC,YAAT,GAAwB;AACrC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,KAAK,CAACO,QAAN,CAAe,KAAf,CAAlC;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BT,KAAK,CAACO,QAAN,CAAe,IAAf,CAApC;AACA,QAAM,CAACG,MAAD,EAASC,SAAT,IAAsBX,KAAK,CAACO,QAAN,CAAe;AACzCK,IAAAA,SAAS,EAAE,EAD8B;AAEzCC,IAAAA,QAAQ,EAAE,EAF+B;AAGzCC,IAAAA,QAAQ,EAAE,EAH+B;AAIzCC,IAAAA,KAAK,EAAE;AAJkC,GAAf,CAA5B;;AAOA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBH,KAAK,CAACI,MAA9B;;AAEA,YAAQF,IAAR;AACE,WAAK,MAAL;AACET,QAAAA,MAAM,CAACE,SAAP,GAAmBQ,KAAK,CAACE,MAAN,GAAe,CAAf,GAAmB,sCAAnB,GAA4D,EAA/E;AACA;;AACF,WAAK,OAAL;AACEZ,QAAAA,MAAM,CAACK,KAAP,GAAeZ,eAAe,CAACoB,IAAhB,CAAqBH,KAArB,IAA8B,EAA9B,GAAmC,qBAAlD;AACA;;AACF,WAAK,UAAL;AACEV,QAAAA,MAAM,CAACI,QAAP,GAAkBM,KAAK,CAACE,MAAN,GAAe,CAAf,GAAmB,qCAAnB,GAA2D,EAA7E;AACA;;AACF;AACE;AAXJ;;AAaAX,IAAAA,SAAS,CAACD,MAAD,CAAT;AACD,GAlBD;;AAoBA,QAAMc,kBAAkB,GAAIP,KAAD,IAAW;AACpCA,IAAAA,KAAK,CAACC,cAAN;AACAZ,IAAAA,YAAY,CAACJ,YAAY,CAACQ,MAAD,CAAb,CAAZ;AACAD,IAAAA,aAAa,CAACR,WAAW,CAACS,MAAD,CAAZ,CAAb;AACD,GAJD;;AAMA,SAAO;AACLe,IAAAA,KAAK,EAAE;AACLpB,MAAAA,SADK;AAELG,MAAAA,UAFK;AAGLE,MAAAA;AAHK,KADF;AAMLgB,IAAAA,MAAM,EAAE;AACNpB,MAAAA,YADM;AAENG,MAAAA,aAFM;AAGNE,MAAAA,SAHM;AAINK,MAAAA,YAJM;AAKNQ,MAAAA;AALM;AANH,GAAP;AAcD","sourcesContent":["import React from 'react';\nimport { countErrors, validateForm, validEmailRegex } from './helper';\n\nexport default function useValidator() {\n  const [formValid, setFormValid] = React.useState(false);\n  const [errorCount, setErrorCount] = React.useState(null);\n  const [errors, setErrors] = React.useState({\n    namefield: '',\n    lastname: '',\n    password: '',\n    email: '',\n  });\n\n  const handleFields = (event) => {\n    event.preventDefault();\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        errors.namefield = value.length < 5 ? 'Full Name must be 5 characters long!' : '';\n        break;\n      case 'email':\n        errors.email = validEmailRegex.test(value) ? '' : 'Email is not valid!';\n        break;\n      case 'password':\n        errors.password = value.length < 8 ? 'Password must be 8 characters long!' : '';\n        break;\n      default:\n        break;\n    }\n    setErrors(errors);\n  };\n\n  const handleSubmitFields = (event) => {\n    event.preventDefault();\n    setFormValid(validateForm(errors));\n    setErrorCount(countErrors(errors));\n  };\n\n  return {\n    state: {\n      formValid,\n      errorCount,\n      errors,\n    },\n    action: {\n      setFormValid,\n      setErrorCount,\n      setErrors,\n      handleFields,\n      handleSubmitFields,\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}