{"ast":null,"code":"var _jsxFileName = \"/home/asherphilip/Documents/autographa/renderer/src/components/AutoCompleteSearch/AutoCompleteSearch.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { TextField } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nexport const AutoCompleteSearch = ({\n  listarray,\n  customPlaceholder,\n  selectedValue,\n  setSelectedValue\n}) => __jsx(Autocomplete, {\n  options: listarray,\n  getOptionLabel: option => option.place,\n  inputValue: selectedValue // eslint-disable-next-line no-shadow\n  ,\n  onInputChange: (id, region) => {\n    setSelectedValue(region);\n  },\n  renderInput: params => __jsx(TextField, _extends({}, params, {\n    label: customPlaceholder,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  })),\n  ListboxProps: {\n    'data-testid': 'list-box'\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 3\n  }\n});\nAutoCompleteSearch.propTypes = {\n  // list of array props that needs to be searched\n  listarray: PropTypes.instanceOf(Array),\n  // selected state value prop\n  selectedValue: PropTypes.string,\n  // setting state value prop\n  setSelectedValue: PropTypes.func,\n  // placeholder to display\n  customPlaceholder: PropTypes.string\n};\nAutoCompleteSearch.defaultProps = {\n  listarray: PropTypes.instanceOf(Array)\n};","map":{"version":3,"sources":["/home/asherphilip/Documents/autographa/renderer/src/components/AutoCompleteSearch/AutoCompleteSearch.js"],"names":["React","PropTypes","TextField","Autocomplete","AutoCompleteSearch","listarray","customPlaceholder","selectedValue","setSelectedValue","option","place","id","region","params","propTypes","instanceOf","Array","string","func","defaultProps"],"mappings":";;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AAEA,OAAO,MAAMC,kBAAkB,GAAG,CAAC;AACjCC,EAAAA,SADiC;AACtBC,EAAAA,iBADsB;AACHC,EAAAA,aADG;AACYC,EAAAA;AADZ,CAAD,KAGhC,MAAC,YAAD;AACE,EAAA,OAAO,EAAEH,SADX;AAEE,EAAA,cAAc,EAAGI,MAAD,IAAYA,MAAM,CAACC,KAFrC;AAGE,EAAA,UAAU,EAAEH,aAHd,CAIM;AAJN;AAKE,EAAA,aAAa,EAAE,CAACI,EAAD,EAAKC,MAAL,KAAgB;AAC7BJ,IAAAA,gBAAgB,CAACI,MAAD,CAAhB;AACD,GAPH;AAQE,EAAA,WAAW,EAAGC,MAAD,IACX,MAAC,SAAD,eACMA,MADN;AAEE,IAAA,KAAK,EAAEP,iBAFT;AAGE,IAAA,OAAO,EAAC,UAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KATJ;AAeE,EAAA,YAAY,EAAE;AAAE,mBAAe;AAAjB,GAfhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHK;AAqBPF,kBAAkB,CAACU,SAAnB,GAA+B;AAC7B;AACAT,EAAAA,SAAS,EAAEJ,SAAS,CAACc,UAAV,CAAqBC,KAArB,CAFkB;AAG7B;AACAT,EAAAA,aAAa,EAAEN,SAAS,CAACgB,MAJI;AAK7B;AACAT,EAAAA,gBAAgB,EAAEP,SAAS,CAACiB,IANC;AAO7B;AACAZ,EAAAA,iBAAiB,EAAEL,SAAS,CAACgB;AARA,CAA/B;AAUAb,kBAAkB,CAACe,YAAnB,GAAkC;AAChCd,EAAAA,SAAS,EAAEJ,SAAS,CAACc,UAAV,CAAqBC,KAArB;AADqB,CAAlC","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { TextField } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nexport const AutoCompleteSearch = ({\n  listarray, customPlaceholder, selectedValue, setSelectedValue,\n}) => (\n  <Autocomplete\n    options={listarray}\n    getOptionLabel={(option) => option.place}\n    inputValue={selectedValue}\n        // eslint-disable-next-line no-shadow\n    onInputChange={(id, region) => {\n      setSelectedValue(region);\n    }}\n    renderInput={(params) => (\n      <TextField\n        {...params}\n        label={customPlaceholder}\n        variant=\"outlined\"\n      />\n    )}\n    ListboxProps={{ 'data-testid': 'list-box' }}\n  />\n);\nAutoCompleteSearch.propTypes = {\n  // list of array props that needs to be searched\n  listarray: PropTypes.instanceOf(Array),\n  // selected state value prop\n  selectedValue: PropTypes.string,\n  // setting state value prop\n  setSelectedValue: PropTypes.func,\n  // placeholder to display\n  customPlaceholder: PropTypes.string,\n};\nAutoCompleteSearch.defaultProps = {\n  listarray: PropTypes.instanceOf(Array),\n};\n"]},"metadata":{},"sourceType":"module"}