{"ast":null,"code":"var _jsxFileName = \"/home/asherphilip/Documents/autographa/renderer/src/components/ProjectsPage/CreateProject/GeneralSettting.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { Grid, Box, MenuItem, FormControl, Select, Radio, RadioGroup, FormLabel, FormControlLabel, TextField, Chip } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { CreateProjectStyles } from './useStyles/CreateProjectStyles';\nimport { AutoComplete } from './AutoComplete';\nimport useValidator from '../../Validation/useValidator';\nconst version = [{\n  id: 1,\n  value: 'IRV'\n}, {\n  id: 2,\n  value: 'NLT'\n}, {\n  id: 3,\n  value: 'UDB'\n}, {\n  id: 4,\n  value: 'ULB'\n}, {\n  id: 5,\n  value: 'UJNT'\n}];\n\nfunction StyledRadio(props) {\n  const classes = CreateProjectStyles();\n  return __jsx(Radio, _extends({\n    className: classes.radioroot,\n    disableRipple: true,\n    color: \"default\",\n    checkedIcon: __jsx(\"span\", {\n      className: clsx(classes.icon, classes.checkedIcon),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 20\n      }\n    }),\n    icon: __jsx(\"span\", {\n      className: classes.icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    })\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }));\n}\n\nconst GeneralSettting = () => {\n  const classes = CreateProjectStyles();\n  const [biblename, setBiblename] = React.useState('');\n  const {\n    state: {\n      errors\n    },\n    action: {\n      handleFields\n    }\n  } = useValidator();\n  return __jsx(React.Fragment, null, __jsx(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, __jsx(\"form\", {\n    noValidate: true,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, __jsx(FormControl, {\n    component: \"fieldset\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  }, __jsx(FormLabel, {\n    component: \"legend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, __jsx(Box, {\n    fontWeight: 600,\n    m: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 19\n    }\n  }, \"Type\")), __jsx(Select, {\n    className: classes.biblename,\n    value: \"bi\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, __jsx(MenuItem, {\n    value: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 19\n    }\n  }, \"MdFile\"), __jsx(MenuItem, {\n    value: \"bi\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 19\n    }\n  }, \"Bible\"))), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }, __jsx(FormControl, {\n    component: \"fieldset\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, __jsx(FormLabel, {\n    component: \"legend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 19\n    }\n  }, __jsx(Box, {\n    fontWeight: 600,\n    m: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }, \"Project Name\")), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 19\n    }\n  }, __jsx(TextField, {\n    className: classes.biblename,\n    variant: \"outlined\",\n    name: \"namefield\",\n    placeholder: \"Enter Bible Name\",\n    value: biblename,\n    helperText: errors.namefield,\n    onChange: e => {\n      setBiblename(e.target.value);\n      handleFields(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  })))), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }, __jsx(FormControl, {\n    component: \"fieldset\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, __jsx(FormLabel, {\n    component: \"legend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 19\n    }\n  }, __jsx(Box, {\n    fontWeight: 600,\n    m: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }, \"Bible Version\")), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 19\n    }\n  }, __jsx(AutoComplete, {\n    version: version,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  })))), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }, __jsx(FormControl, {\n    className: classes.direction,\n    component: \"fieldset\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, __jsx(FormLabel, {\n    component: \"legend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 19\n    }\n  }, __jsx(Box, {\n    fontWeight: 600,\n    m: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  }, \"Script Direction\")), __jsx(RadioGroup, {\n    style: {\n      display: 'inline',\n      marginLeft: '12px'\n    },\n    defaultValue: \"LTR\",\n    \"aria-label\": \"direction\",\n    name: \"customized-radios\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 19\n    }\n  }, __jsx(FormControlLabel, {\n    value: \"LTR\",\n    control: __jsx(StyledRadio, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 32\n      }\n    }),\n    label: \"LTR\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 21\n    }\n  }), __jsx(FormControlLabel, {\n    value: \"RTL\",\n    control: __jsx(StyledRadio, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 32\n      }\n    }),\n    label: \"RTL\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }\n  })))))))));\n};\n\nexport default GeneralSettting;","map":{"version":3,"sources":["/home/asherphilip/Documents/autographa/renderer/src/components/ProjectsPage/CreateProject/GeneralSettting.js"],"names":["React","Grid","Box","MenuItem","FormControl","Select","Radio","RadioGroup","FormLabel","FormControlLabel","TextField","Chip","clsx","CreateProjectStyles","AutoComplete","useValidator","version","id","value","StyledRadio","props","classes","radioroot","icon","checkedIcon","GeneralSettting","biblename","setBiblename","useState","state","errors","action","handleFields","namefield","e","target","direction","display","marginLeft"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Grid,\n  Box,\n  MenuItem,\n  FormControl,\n  Select,\n  Radio,\n  RadioGroup,\n  FormLabel,\n  FormControlLabel,\n  TextField, Chip\n} from '@material-ui/core';\nimport clsx from 'clsx';\nimport { CreateProjectStyles } from './useStyles/CreateProjectStyles';\nimport { AutoComplete } from './AutoComplete';\nimport useValidator from '../../Validation/useValidator';\n\nconst version = [\n  { id: 1, value: 'IRV' },\n  { id: 2, value: 'NLT' },\n  { id: 3, value: 'UDB' },\n  { id: 4, value: 'ULB' },\n  { id: 5, value: 'UJNT' },\n];\n\nfunction StyledRadio(props) {\n  const classes = CreateProjectStyles();\n\n  return (\n    <Radio\n      className={classes.radioroot}\n      disableRipple\n      color=\"default\"\n      checkedIcon={<span className={clsx(classes.icon, classes.checkedIcon)} />}\n      icon={<span className={classes.icon} />}\n      {...props}\n    />\n  );\n}\n\nconst GeneralSettting = () => {\n  const classes = CreateProjectStyles();\n  const [biblename, setBiblename] = React.useState('');\n  const {\n    state: { errors }, action: { handleFields },\n  } = useValidator();\n  return (\n    <>\n      <Grid container spacing={3}>\n        <Grid item xs={6}>\n          <form noValidate autoComplete=\"off\">\n            <div>\n              <FormControl component=\"fieldset\">\n                <FormLabel component=\"legend\">\n                  <Box fontWeight={600} m={1}>\n                    Type\n                  </Box>\n                </FormLabel>\n                <Select\n                  className={classes.biblename}\n                  value=\"bi\"\n                  variant=\"outlined\"\n                >\n                  <MenuItem value=\"md\">MdFile</MenuItem>\n                  <MenuItem value=\"bi\">Bible</MenuItem>\n                </Select>\n              </FormControl>\n              <div>\n                <FormControl component=\"fieldset\">\n                  <FormLabel component=\"legend\">\n                    <Box fontWeight={600} m={1}>\n                      Project Name\n                    </Box>\n                  </FormLabel>\n                  <div>\n                    <TextField\n                      className={classes.biblename}\n                      variant=\"outlined\"\n                      name=\"namefield\"\n                      placeholder=\"Enter Bible Name\"\n                      value={biblename}\n                      helperText={errors.namefield}\n                      onChange={(e) => {\n                        setBiblename(e.target.value);\n                        handleFields(e);\n                      }}\n                        \n                    />\n                  </div>\n                </FormControl>\n              </div>\n              <span>\n                <FormControl component=\"fieldset\">\n                  <FormLabel component=\"legend\">\n                    <Box fontWeight={600} m={1}>\n                      Bible Version\n                    </Box>\n                  </FormLabel>\n                  <div>\n                    <AutoComplete version={version} />\n                  </div>\n                </FormControl>\n              </span>\n\n              <div>\n                <FormControl className={classes.direction} component=\"fieldset\">\n                  <FormLabel component=\"legend\">\n                    <Box fontWeight={600} m={1}>\n                      Script Direction\n                    </Box>\n                  </FormLabel>\n                  <RadioGroup\n                    style={{ display: 'inline', marginLeft: '12px' }}\n                    defaultValue=\"LTR\"\n                    aria-label=\"direction\"\n                    name=\"customized-radios\"\n                  >\n                    <FormControlLabel\n                      value=\"LTR\"\n                      control={<StyledRadio />}\n                      label=\"LTR\"\n                    />\n                    <FormControlLabel\n                      value=\"RTL\"\n                      control={<StyledRadio />}\n                      label=\"RTL\"\n                    />\n                  </RadioGroup>\n                </FormControl>\n              </div>\n            </div>\n          </form>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\nexport default GeneralSettting;\n"]},"metadata":{},"sourceType":"module"}