{"ast":null,"code":"import React, { useEffect } from 'react';\nimport * as logger from '../../../logger';\n\nfunction useProjectsSort() {\n  const [starredrow, setStarredRow] = React.useState('');\n  const [unstarredrow, setUnStarredRow] = React.useState('');\n  const [temparray, settemparray] = React.useState(null);\n  const [active, setactive] = React.useState('');\n  const [orderUnstarred, setOrderUnstarred] = React.useState('asc');\n  const [orderByUnstarred, setOrderByUnstarred] = React.useState('name');\n\n  const handleClickStarred = (event, name, property) => {\n    logger.debug('project.js', 'calling starred to be unstarred and viceversa');\n    property === 'starred' ? setactive('starred') : setactive('unstarred');\n    const selectedIndex = property === 'starred' ? starredrow.findIndex(x => x.name === name) : unstarredrow.findIndex(x => x.name === name);\n    const copy = property === 'starred' ? starredrow.splice(selectedIndex, 1) : unstarredrow.splice(selectedIndex, 1);\n    settemparray(copy[0]);\n  };\n\n  const handleRequestSortUnstarred = (event, property) => {\n    logger.debug('project.js', `calling unstarred stable sort with value of orderBy=${property}`);\n    const isAsc = orderByUnstarred === property && orderUnstarred === 'asc';\n    setOrderUnstarred(isAsc ? 'desc' : 'asc');\n    setOrderByUnstarred(property);\n  };\n\n  const handleDelete = (event, name, property) => {\n    logger.debug('project.js', 'calling handleDelete event');\n    const selectedIndex = property === 'starred' ? starredrow.findIndex(x => x.name === name) : unstarredrow.findIndex(x => x.name === name);\n    logger.debug('project.js', `removing the element with name=${name}`);\n    /* eslint no-unused-expressions: [\"error\", { \"allowTernary\": true }] */\n\n    property === 'starred' ? starredrow.splice(selectedIndex, 1) : unstarredrow.splice(selectedIndex, 1);\n    handleRequestSortUnstarred('asc', 'view');\n  }; // eslint-disable-next-line\n\n\n  useEffect(() => {\n    if (temparray) {\n      active === 'starred' ? unstarredrow.push(temparray) : starredrow.push(temparray);\n    }\n\n    handleRequestSortUnstarred('asc', 'view'); // eslint-disable-next-line\n  }, [temparray, active]);\n  const response = {\n    state: {\n      starredrow,\n      unstarredrow,\n      orderUnstarred,\n      orderByUnstarred\n    },\n    actions: {\n      handleClickStarred,\n      handleDelete,\n      handleRequestSortUnstarred,\n      setStarredRow,\n      setUnStarredRow,\n      settemparray,\n      setactive,\n      setOrderUnstarred,\n      setOrderByUnstarred\n    }\n  };\n  return response;\n}\n\nexport default useProjectsSort;","map":{"version":3,"sources":["/home/asherphilip/Documents/autographa/renderer/src/components/ProjectsPage/Projects/useProjectsSort.js"],"names":["React","useEffect","logger","useProjectsSort","starredrow","setStarredRow","useState","unstarredrow","setUnStarredRow","temparray","settemparray","active","setactive","orderUnstarred","setOrderUnstarred","orderByUnstarred","setOrderByUnstarred","handleClickStarred","event","name","property","debug","selectedIndex","findIndex","x","copy","splice","handleRequestSortUnstarred","isAsc","handleDelete","push","response","state","actions"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport * as logger from '../../../logger';\n\nfunction useProjectsSort() {\n  const [starredrow, setStarredRow] = React.useState('');\n  const [unstarredrow, setUnStarredRow] = React.useState('');\n  const [temparray, settemparray] = React.useState(null);\n  const [active, setactive] = React.useState('');\n  const [orderUnstarred, setOrderUnstarred] = React.useState('asc');\n  const [orderByUnstarred, setOrderByUnstarred] = React.useState('name');\n\n  const handleClickStarred = (event, name, property) => {\n    logger.debug('project.js', 'calling starred to be unstarred and viceversa');\n    property === 'starred' ? setactive('starred') : setactive('unstarred');\n    const selectedIndex = property === 'starred'\n      ? starredrow.findIndex((x) => x.name === name)\n      : unstarredrow.findIndex((x) => x.name === name);\n    const copy = property === 'starred'\n      ? starredrow.splice(selectedIndex, 1)\n      : unstarredrow.splice(selectedIndex, 1);\n    settemparray(copy[0]);\n  };\n\n  const handleRequestSortUnstarred = (event, property) => {\n    logger.debug(\n      'project.js',\n      `calling unstarred stable sort with value of orderBy=${property}`,\n    );\n    const isAsc = orderByUnstarred === property && orderUnstarred === 'asc';\n    setOrderUnstarred(isAsc ? 'desc' : 'asc');\n    setOrderByUnstarred(property);\n  };\n\n  const handleDelete = (event, name, property) => {\n    logger.debug('project.js', 'calling handleDelete event');\n    const selectedIndex = property === 'starred'\n      ? starredrow.findIndex((x) => x.name === name)\n      : unstarredrow.findIndex((x) => x.name === name);\n    logger.debug('project.js', `removing the element with name=${name}`);\n    /* eslint no-unused-expressions: [\"error\", { \"allowTernary\": true }] */\n    property === 'starred'\n      ? (starredrow.splice(selectedIndex, 1))\n      : (unstarredrow.splice(selectedIndex, 1));\n    handleRequestSortUnstarred('asc', 'view');\n  };\n\n  // eslint-disable-next-line\n    useEffect(() => {\n    if (temparray) {\n      active === 'starred'\n        ? unstarredrow.push(temparray)\n        : starredrow.push(temparray);\n    }\n    handleRequestSortUnstarred('asc', 'view');\n    // eslint-disable-next-line\n      }, [temparray, active]);\n\n  const response = {\n    state: {\n      starredrow,\n      unstarredrow,\n      orderUnstarred,\n      orderByUnstarred,\n    },\n    actions: {\n      handleClickStarred,\n      handleDelete,\n      handleRequestSortUnstarred,\n      setStarredRow,\n      setUnStarredRow,\n      settemparray,\n      setactive,\n      setOrderUnstarred,\n      setOrderByUnstarred,\n    },\n  };\n  return response;\n}\nexport default useProjectsSort;\n"]},"metadata":{},"sourceType":"module"}