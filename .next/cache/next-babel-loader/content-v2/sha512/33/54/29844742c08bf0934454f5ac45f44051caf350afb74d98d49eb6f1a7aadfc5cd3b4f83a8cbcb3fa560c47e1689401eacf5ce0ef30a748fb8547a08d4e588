{"ast":null,"code":"/* eslint-disable no-useless-escape */\n\n/* eslint-disable no-unused-expressions */\n\n/* eslint-disable no-return-assign */\nexport var validEmailRegex = RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\nexport var validateForm = function validateForm(errors) {\n  var valid = true;\n  Object.values(errors).forEach(function (val) {\n    val.length > 0 && (valid = false);\n  });\n  return valid;\n};\nexport var countErrors = function countErrors(errors) {\n  var count = 0;\n  Object.values(errors).forEach(function (val) {\n    return val.length > 0 && (count += 1);\n  });\n  return count;\n};","map":{"version":3,"sources":["/home/asherphilip/Documents/autographa/renderer/src/components/Validation/helper.js"],"names":["validEmailRegex","RegExp","validateForm","errors","valid","Object","values","forEach","val","length","countErrors","count"],"mappings":"AAAA;;AACA;;AACA;AACA,OAAO,IAAMA,eAAe,GAAGC,MAAM,CACnC,wHADmC,CAA9B;AAIP,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,MAAD,EAAY;AACtC,MAAIC,KAAK,GAAG,IAAZ;AACAC,EAAAA,MAAM,CAACC,MAAP,CAAcH,MAAd,EAAsBI,OAAtB,CAA8B,UAACC,GAAD,EAAS;AACpCA,IAAAA,GAAG,CAACC,MAAJ,GAAa,CAAb,KAAmBL,KAAK,GAAG,KAA3B,CAAD;AACD,GAFD;AAGA,SAAOA,KAAP;AACD,CANM;AAQP,OAAO,IAAMM,WAAW,GAAG,SAAdA,WAAc,CAACP,MAAD,EAAY;AACrC,MAAIQ,KAAK,GAAG,CAAZ;AACAN,EAAAA,MAAM,CAACC,MAAP,CAAcH,MAAd,EAAsBI,OAAtB,CAA8B,UAACC,GAAD;AAAA,WAAWA,GAAG,CAACC,MAAJ,GAAa,CAAd,KAAqBE,KAAK,IAAI,CAA9B,CAAV;AAAA,GAA9B;AACA,SAAOA,KAAP;AACD,CAJM","sourcesContent":["/* eslint-disable no-useless-escape */\n/* eslint-disable no-unused-expressions */\n/* eslint-disable no-return-assign */\nexport const validEmailRegex = RegExp(\n  /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i,\n);\n\nexport const validateForm = (errors) => {\n  let valid = true;\n  Object.values(errors).forEach((val) => {\n    (val.length > 0 && (valid = false));\n  });\n  return valid;\n};\n\nexport const countErrors = (errors) => {\n  let count = 0;\n  Object.values(errors).forEach((val) => ((val.length > 0) && (count += 1)));\n  return count;\n};\n"]},"metadata":{},"sourceType":"module"}