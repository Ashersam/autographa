{"ast":null,"code":"var _jsxFileName = \"/home/asherphilip/Documents/autographa/renderer/src/components/ProjectsPage/CreateProject/AutoComplete.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { TextField } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { CreateProjectStyles } from './useStyles/CreateProjectStyles';\nexport const AutoComplete = ({\n  version\n}) => {\n  const classes = CreateProjectStyles();\n  const [selregion, setRegion] = React.useState('');\n  return __jsx(Autocomplete, {\n    freeSolo: true,\n    disableClearable: true,\n    className: classes.autocomplete,\n    options: version,\n    getOptionLabel: option => option.value,\n    inputValue: selregion // eslint-disable-next-line no-shadow\n    ,\n    onInputChange: (id, version) => {\n      setRegion(version);\n    },\n    renderInput: params => __jsx(TextField, _extends({}, params, {\n      margin: \"normal\",\n      variant: \"outlined\",\n      placeholder: \"Select the version\",\n      style: {\n        marginTop: '5px'\n      },\n      InputProps: _objectSpread(_objectSpread({}, params.InputProps), {}, {\n        type: 'search'\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  });\n};\nAutoComplete.propTypes = {\n  version: PropTypes.instanceOf(Array)\n};\nAutoComplete.defaultProps = {\n  version: PropTypes.instanceOf(Array)\n};","map":{"version":3,"sources":["/home/asherphilip/Documents/autographa/renderer/src/components/ProjectsPage/CreateProject/AutoComplete.js"],"names":["React","PropTypes","TextField","Autocomplete","CreateProjectStyles","AutoComplete","version","classes","selregion","setRegion","useState","autocomplete","option","value","id","params","marginTop","InputProps","type","propTypes","instanceOf","Array","defaultProps"],"mappings":";;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,SAASC,mBAAT,QAAoC,iCAApC;AAEA,OAAO,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAC3C,QAAMC,OAAO,GAAGH,mBAAmB,EAAnC;AACA,QAAM,CAACI,SAAD,EAAYC,SAAZ,IAAyBT,KAAK,CAACU,QAAN,CAAe,EAAf,CAA/B;AAEA,SACE,MAAC,YAAD;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,gBAAgB,MAFlB;AAGE,IAAA,SAAS,EAAEH,OAAO,CAACI,YAHrB;AAIE,IAAA,OAAO,EAAEL,OAJX;AAKE,IAAA,cAAc,EAAGM,MAAD,IAAYA,MAAM,CAACC,KALrC;AAME,IAAA,UAAU,EAAEL,SANd,CAOE;AAPF;AAQE,IAAA,aAAa,EAAE,CAACM,EAAD,EAAKR,OAAL,KAAiB;AAC9BG,MAAAA,SAAS,CAACH,OAAD,CAAT;AACD,KAVH;AAWE,IAAA,WAAW,EAAGS,MAAD,IACX,MAAC,SAAD,eACMA,MADN;AAEE,MAAA,MAAM,EAAC,QAFT;AAGE,MAAA,OAAO,EAAC,UAHV;AAIE,MAAA,WAAW,EAAC,oBAJd;AAKE,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OALT;AAME,MAAA,UAAU,kCAAOD,MAAM,CAACE,UAAd;AAA0BC,QAAAA,IAAI,EAAE;AAAhC,QANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAwBD,CA5BM;AA8BPb,YAAY,CAACc,SAAb,GAAyB;AACvBb,EAAAA,OAAO,EAAEL,SAAS,CAACmB,UAAV,CAAqBC,KAArB;AADc,CAAzB;AAGAhB,YAAY,CAACiB,YAAb,GAA4B;AAC1BhB,EAAAA,OAAO,EAAEL,SAAS,CAACmB,UAAV,CAAqBC,KAArB;AADiB,CAA5B","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { TextField } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { CreateProjectStyles } from './useStyles/CreateProjectStyles';\n\nexport const AutoComplete = ({ version }) => {\n  const classes = CreateProjectStyles();\n  const [selregion, setRegion] = React.useState('');\n\n  return (\n    <Autocomplete\n      freeSolo\n      disableClearable\n      className={classes.autocomplete}\n      options={version}\n      getOptionLabel={(option) => option.value}\n      inputValue={selregion}\n      // eslint-disable-next-line no-shadow\n      onInputChange={(id, version) => {\n        setRegion(version);\n      }}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          margin=\"normal\"\n          variant=\"outlined\"\n          placeholder=\"Select the version\"\n          style={{ marginTop: '5px' }}\n          InputProps={{ ...params.InputProps, type: 'search' }}\n        />\n      )}\n    />\n  );\n};\n\nAutoComplete.propTypes = {\n  version: PropTypes.instanceOf(Array),\n};\nAutoComplete.defaultProps = {\n  version: PropTypes.instanceOf(Array),\n};\n"]},"metadata":{},"sourceType":"module"}