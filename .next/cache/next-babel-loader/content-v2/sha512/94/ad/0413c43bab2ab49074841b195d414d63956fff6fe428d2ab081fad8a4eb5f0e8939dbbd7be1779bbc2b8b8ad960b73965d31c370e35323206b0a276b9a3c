{"ast":null,"code":"var _jsxFileName = \"/home/asherphilip/Documents/autographa/renderer/src/components/ApplicationBar/ApplicationBar.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { AppBar, CssBaseline, Toolbar, Typography } from '@material-ui/core';\nimport { useStyles } from './useStyles';\nimport DrawerMenu from './DrawerMenu';\n\nfunction ApplicationBar({\n  title,\n  buttons,\n  drawerMenu,\n  drawerMenuProps\n}) {\n  const classes = useStyles();\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, __jsx(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }), __jsx(AppBar, {\n    position: \"fixed\",\n    className: classes.appBar,\n    style: style || '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, __jsx(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    \"data-testid\": \"app-title\",\n    noWrap: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, title), __jsx(\"div\", {\n    className: classes.grow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }), __jsx(\"span\", {\n    \"data-testid\": \"app-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, buttons))), drawerMenu && __jsx(DrawerMenu, _extends({}, drawerMenuProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), drawerMenu));\n}\n\nApplicationBar.defaultProps = {\n  drawerMenuProps: {}\n};\nApplicationBar.propTypes = {\n  /** The title string or jsx to be displayed. */\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n\n  /** Additional buttons to be displayed. */\n  buttons: PropTypes.element,\n\n  /** Component to render inside of the drawer menu. */\n  drawerMenu: PropTypes.element,\n\n  /** Drawer menu props. */\n  drawerMenuProps: PropTypes.object\n};\nexport default ApplicationBar;","map":{"version":3,"sources":["/home/asherphilip/Documents/autographa/renderer/src/components/ApplicationBar/ApplicationBar.js"],"names":["React","PropTypes","AppBar","CssBaseline","Toolbar","Typography","useStyles","DrawerMenu","ApplicationBar","title","buttons","drawerMenu","drawerMenuProps","classes","root","appBar","style","grow","defaultProps","propTypes","oneOfType","string","element","object"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SACEC,MADF,EAEEC,WAFF,EAGEC,OAHF,EAIEC,UAJF,QAKO,mBALP;AAOA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,SAASC,cAAT,CAAwB;AACtBC,EAAAA,KADsB;AAEtBC,EAAAA,OAFsB;AAGtBC,EAAAA,UAHsB;AAItBC,EAAAA;AAJsB,CAAxB,EAKG;AACD,QAAMC,OAAO,GAAGP,SAAS,EAAzB;AAEA,SACE;AAAK,IAAA,SAAS,EAAEO,OAAO,CAACC,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,MAAD;AACE,IAAA,QAAQ,EAAC,OADX;AAEE,IAAA,SAAS,EAAED,OAAO,CAACE,MAFrB;AAGE,IAAA,KAAK,EAAEC,KAAK,IAAI,EAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AACE,IAAA,OAAO,EAAC,IADV;AAEE,mBAAY,WAFd;AAGE,IAAA,MAAM,MAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGP,KALH,CADF,EAQE;AAAK,IAAA,SAAS,EAAEI,OAAO,CAACI,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EASE;AAAM,mBAAY,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,OADH,CATF,CALF,CAFF,EAqBGC,UAAU,IACT,MAAC,UAAD,eAAgBC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGD,UADH,CAtBJ,CADF;AA6BD;;AAEDH,cAAc,CAACU,YAAf,GAA8B;AAC5BN,EAAAA,eAAe,EAAE;AADW,CAA9B;AAIAJ,cAAc,CAACW,SAAf,GAA2B;AACzB;AACAV,EAAAA,KAAK,EAAER,SAAS,CAACmB,SAAV,CAAoB,CACzBnB,SAAS,CAACoB,MADe,EAEzBpB,SAAS,CAACqB,OAFe,CAApB,CAFkB;;AAMzB;AACAZ,EAAAA,OAAO,EAAET,SAAS,CAACqB,OAPM;;AAQzB;AACAX,EAAAA,UAAU,EAAEV,SAAS,CAACqB,OATG;;AAUzB;AACAV,EAAAA,eAAe,EAAEX,SAAS,CAACsB;AAXF,CAA3B;AAcA,eAAef,cAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  AppBar,\n  CssBaseline,\n  Toolbar,\n  Typography,\n} from '@material-ui/core';\n\nimport { useStyles } from './useStyles';\nimport DrawerMenu from './DrawerMenu';\n\nfunction ApplicationBar({\n  title,\n  buttons,\n  drawerMenu,\n  drawerMenuProps,\n}) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={classes.appBar}\n        style={style || ''}\n      >\n        <Toolbar>\n          <Typography\n            variant=\"h6\"\n            data-testid=\"app-title\"\n            noWrap\n          >\n            {title}\n          </Typography>\n          <div className={classes.grow} />\n          <span data-testid=\"app-buttons\">\n            {buttons}\n          </span>\n        </Toolbar>\n      </AppBar>\n      {drawerMenu && (\n        <DrawerMenu {...drawerMenuProps}>\n          {drawerMenu}\n        </DrawerMenu>\n      )}\n    </div>\n  );\n}\n\nApplicationBar.defaultProps = {\n  drawerMenuProps: {},\n};\n\nApplicationBar.propTypes = {\n  /** The title string or jsx to be displayed. */\n  title: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.element,\n  ]),\n  /** Additional buttons to be displayed. */\n  buttons: PropTypes.element,\n  /** Component to render inside of the drawer menu. */\n  drawerMenu: PropTypes.element,\n  /** Drawer menu props. */\n  drawerMenuProps: PropTypes.object,\n};\n\nexport default ApplicationBar;\n"]},"metadata":{},"sourceType":"module"}