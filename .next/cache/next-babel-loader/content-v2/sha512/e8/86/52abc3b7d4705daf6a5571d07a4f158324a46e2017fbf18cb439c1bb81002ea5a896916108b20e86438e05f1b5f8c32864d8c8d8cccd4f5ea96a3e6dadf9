{"ast":null,"code":"import _extends from \"/home/asherphilip/Documents/autographa/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"/home/asherphilip/Documents/autographa/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/asherphilip/Documents/autographa/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/asherphilip/Documents/autographa/renderer/src/components/Login/CustomLogin.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { TextField, Button, Grid, Link, Typography } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport PersonOutlineIcon from '@material-ui/icons/PersonOutline';\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\n\nvar CustomLogin = function CustomLogin(_ref) {\n  _s();\n\n  var _ui$autocomplete, _ui$autocomplete$coun, _ui$textfield, _ui$textfield$count;\n\n  var ui = _ref.ui,\n      error = _ref.error,\n      login = _ref.login,\n      userlist = _ref.userlist,\n      validation = _ref.validation;\n\n  var _React$useState = React.useState({}),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      values = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var handleChange = function handleChange(prop) {\n    return function (event) {\n      setValue(_objectSpread(_objectSpread({}, values), {}, _defineProperty({}, prop, event.target.value)));\n    };\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    login(values);\n    setValue({});\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Grid, {\n    container: true,\n    direction: \"column\",\n    spacing: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, __jsx(\"form\", {\n    key: \"login\",\n    name: \"aglogin\",\n    onSubmit: function onSubmit(e) {\n      return handleSubmit(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, __jsx(Typography, {\n    color: \"error\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, validation === null || validation === void 0 ? void 0 : validation.msg), ui === null || ui === void 0 ? void 0 : (_ui$autocomplete = ui.autocomplete) === null || _ui$autocomplete === void 0 ? void 0 : (_ui$autocomplete$coun = _ui$autocomplete.count) === null || _ui$autocomplete$coun === void 0 ? void 0 : _ui$autocomplete$coun.map(function (v) {\n    return __jsx(Grid, {\n      key: v.label,\n      container: true,\n      spacing: 1,\n      alignItems: \"flex-end\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }, __jsx(PersonOutlineIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 15\n      }\n    }), __jsx(Autocomplete, {\n      freeSolo: true,\n      \"data-testid\": \"autocomplete\",\n      options: userlist,\n      getOptionLabel: function getOptionLabel(option) {\n        return option.email;\n      },\n      getOptionSelected: function getOptionSelected(option, value) {\n        return option.email === value.email;\n      },\n      onInputChange: function onInputChange(event, newInputValue) {\n        setValue(_objectSpread(_objectSpread({}, values), {}, {\n          username: newInputValue\n        }));\n      },\n      renderInput: function renderInput(params) {\n        return __jsx(TextField, _extends({}, params, {\n          label: v.label,\n          error: error.username,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 31\n          }\n        }));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 15\n      }\n    }));\n  }), ui === null || ui === void 0 ? void 0 : (_ui$textfield = ui.textfield) === null || _ui$textfield === void 0 ? void 0 : (_ui$textfield$count = _ui$textfield.count) === null || _ui$textfield$count === void 0 ? void 0 : _ui$textfield$count.map(function (c) {\n    return __jsx(\"div\", {\n      key: c.name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, __jsx(Grid, {\n      key: c.label,\n      container: true,\n      spacing: 1,\n      alignItems: \"flex-end\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }\n    }, c.type === 'text' && __jsx(PersonOutlineIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 39\n      }\n    }), c.type === 'password' && __jsx(LockOpenIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 43\n      }\n    }), __jsx(TextField, {\n      name: c.name,\n      label: c.label,\n      type: c.type,\n      onChange: handleChange(c.label),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    })), __jsx(Typography, {\n      color: \"error\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }\n    }, validation === null || validation === void 0 ? void 0 : validation[c.name]));\n  }), (ui === null || ui === void 0 ? void 0 : ui.viewForgot) && __jsx(Link, {\n    href: \"/signup\",\n    variant: \"body2\",\n    align: \"right\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, \"Forgot Password?\"), __jsx(Button, {\n    \"data-testid\": \"login-button\",\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, \"LOGIN\"))));\n};\n\n_s(CustomLogin, \"W40tITFHsQ4UGtG9bqk3hY0aTF8=\");\n\n_c = CustomLogin;\nexport default CustomLogin;\nCustomLogin.propTypes = {\n  /** State which triggers login. */\n  ui: PropTypes.object,\n  error: PropTypes.object,\n  login: PropTypes.func,\n  userlist: PropTypes.array,\n  validation: PropTypes.object\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomLogin\");","map":{"version":3,"sources":["/home/asherphilip/Documents/autographa/renderer/src/components/Login/CustomLogin.js"],"names":["React","PropTypes","TextField","Button","Grid","Link","Typography","Autocomplete","PersonOutlineIcon","LockOpenIcon","CustomLogin","ui","error","login","userlist","validation","useState","values","setValue","handleChange","prop","event","target","value","handleSubmit","e","preventDefault","msg","autocomplete","count","map","v","label","option","email","newInputValue","username","params","textfield","c","name","type","viewForgot","propTypes","object","func","array"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n TextField, Button, Grid, Link, Typography,\n} from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport PersonOutlineIcon from '@material-ui/icons/PersonOutline';\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\n\nconst CustomLogin = ({\n ui, error, login, userlist, validation,\n}) => {\n  const [values, setValue] = React.useState({ });\n  const handleChange = (prop) => (event) => {\n    setValue({ ...values, [prop]: event.target.value });\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    login(values);\n    setValue({});\n  };\n  return (\n    <>\n      <Grid container direction=\"column\" spacing={2}>\n        <form key=\"login\" name=\"aglogin\" onSubmit={(e) => handleSubmit(e)}>\n          <Typography color=\"error\">{validation?.msg}</Typography>\n          {(ui?.autocomplete?.count)?.map((v) => (\n            <Grid key={v.label} container spacing={1} alignItems=\"flex-end\">\n              <PersonOutlineIcon />\n              <Autocomplete\n                freeSolo\n                data-testid=\"autocomplete\"\n                options={userlist}\n                getOptionLabel={(option) => option.email}\n                getOptionSelected={(option, value) => option.email === value.email}\n                onInputChange={(event, newInputValue) => {\n                  setValue({ ...values, username: newInputValue });\n                    }}\n                renderInput={\n                  (params) => <TextField {...params} label={v.label} error={error.username} />\n                  }\n              />\n            </Grid>\n        ))}\n          {(ui?.textfield?.count)?.map((c) => (\n            <div key={c.name}>\n              <Grid key={c.label} container spacing={1} alignItems=\"flex-end\">\n                {c.type === 'text' && <PersonOutlineIcon />}\n                {c.type === 'password' && <LockOpenIcon />}\n                <TextField\n                  name={c.name}\n                  label={c.label}\n                  type={c.type}\n                  onChange={handleChange(c.label)}\n                />\n              </Grid>\n              <Typography color=\"error\">{validation?.[c.name]}</Typography>\n            </div>\n\n        ))}\n          {ui?.viewForgot && (\n          <Link\n            href=\"/signup\"\n            variant=\"body2\"\n            align=\"right\"\n          >\n            Forgot Password?\n          </Link>\n        )}\n          <Button data-testid=\"login-button\" type=\"submit\">LOGIN</Button>\n        </form>\n      </Grid>\n    </>\n  );\n};\nexport default CustomLogin;\nCustomLogin.propTypes = {\n  /** State which triggers login. */\n  ui: PropTypes.object,\n  error: PropTypes.object,\n  login: PropTypes.func,\n  userlist: PropTypes.array,\n  validation: PropTypes.object,\n};\n"]},"metadata":{},"sourceType":"module"}