{"ast":null,"code":"var _jsxFileName = \"/home/asherphilip/Documents/autographa/renderer/src/components/ProjectsPage/ProjectsDrawer.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback } from 'react';\nimport Router from 'next/router';\nimport NProgress from 'nprogress';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport { IconButton, Badge, List, ListItem, ListItemIcon, ListItemText, Avatar } from '@material-ui/core';\nimport { Notifications } from '@material-ui/icons';\nimport ApplicationBar from '../ApplicationBar/ApplicationBar';\nimport { ProjectsNav } from './ProjectPaneNav/ProjectsNav';\n\nRouter.onRouteChangeStart = () => {\n  NProgress.start();\n};\n\nRouter.onRouteChangeComplete = () => {\n  NProgress.done();\n};\n\nRouter.onRouteChangeError = () => {\n  NProgress.done();\n};\n\nexport default function ProjectsDrawer() {\n  const [title, setSelecttitle] = React.useState('Profile');\n\n  const buttons = __jsx(IconButton, {\n    color: \"inherit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, __jsx(Badge, {\n    badgeContent: 17,\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, __jsx(Notifications, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  })));\n\n  const showIcon = index => {\n    switch (index) {\n      case 0:\n        return __jsx(AddCircleIcon, {\n          fontSize: \"large\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 16\n          }\n        });\n\n      case 1:\n        return __jsx(DescriptionIcon, {\n          fontSize: \"large\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 16\n          }\n        });\n\n      case 2:\n        return __jsx(SettingsIcon, {\n          fontSize: \"large\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 16\n          }\n        });\n\n      default:\n        return __jsx(Avatar, {\n          alt: \"My Avatar\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 16\n          }\n        });\n    }\n  };\n\n  const selectPane = useCallback(text => {\n    setSelecttitle(text);\n  }, [setSelecttitle]);\n\n  const drawerMenu = __jsx(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, ['New', 'Projects', 'Sync', 'Profile'].map((text, index) => __jsx(ListItem, {\n    style: {\n      marginBottom: '20px'\n    },\n    button: true,\n    onClick: () => selectPane(text),\n    key: text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, __jsx(ListItemIcon, {\n    style: {\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, showIcon(index)), __jsx(ListItemText, {\n    primary: text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }))));\n\n  return __jsx(React.Fragment, null, __jsx(ApplicationBar, {\n    title: \"AUTOGRAPHA\",\n    theme: \"primary\",\n    buttons: buttons,\n    drawerMenu: drawerMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }), __jsx(ProjectsNav, {\n    title: title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/home/asherphilip/Documents/autographa/renderer/src/components/ProjectsPage/ProjectsDrawer.js"],"names":["React","useCallback","Router","NProgress","DescriptionIcon","SettingsIcon","AddCircleIcon","IconButton","Badge","List","ListItem","ListItemIcon","ListItemText","Avatar","Notifications","ApplicationBar","ProjectsNav","onRouteChangeStart","start","onRouteChangeComplete","done","onRouteChangeError","ProjectsDrawer","title","setSelecttitle","useState","buttons","showIcon","index","selectPane","text","drawerMenu","map","marginBottom","margin"],"mappings":"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","sourcesContent":["import React, { useCallback } from 'react';\nimport Router from 'next/router';\nimport NProgress from 'nprogress';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport {\n  IconButton, Badge, List, ListItem, ListItemIcon, ListItemText, Avatar,\n} from '@material-ui/core';\nimport { Notifications } from '@material-ui/icons';\nimport ApplicationBar from '../ApplicationBar/ApplicationBar';\nimport { ProjectsNav } from './ProjectPaneNav/ProjectsNav';\n\nRouter.onRouteChangeStart = () => {\n  NProgress.start();\n};\n\nRouter.onRouteChangeComplete = () => {\n  NProgress.done();\n};\n\nRouter.onRouteChangeError = () => {\n  NProgress.done();\n};\n\nexport default function ProjectsDrawer() {\n  const [title, setSelecttitle] = React.useState('Profile');\n  const buttons = (\n    <IconButton color=\"inherit\">\n      <Badge badgeContent={17} color=\"secondary\">\n        <Notifications />\n      </Badge>\n    </IconButton>\n  );\n\n  const showIcon = (index) => {\n    switch (index) {\n      case 0:\n        return <AddCircleIcon fontSize=\"large\" />;\n      case 1:\n        return <DescriptionIcon fontSize=\"large\" />;\n      case 2:\n        return <SettingsIcon fontSize=\"large\" />;\n      default:\n        return <Avatar alt=\"My Avatar\" />;\n    }\n  };\n\n  const selectPane = useCallback((text) => {\n    setSelecttitle(text);\n  }, [setSelecttitle]);\n\n  const drawerMenu = (\n    <List>\n      {['New', 'Projects', 'Sync', 'Profile'].map((text, index) => (\n        <ListItem style={{ marginBottom: '20px' }} button onClick={() => selectPane(text)} key={text}>\n          <ListItemIcon style={{ margin: 0 }}>\n            {showIcon(index)}\n          </ListItemIcon>\n          <ListItemText primary={text} />\n        </ListItem>\n      ))}\n    </List>\n  );\n\n  return (\n    <>\n      <ApplicationBar\n        title=\"AUTOGRAPHA\"\n        theme=\"primary\"\n        buttons={buttons}\n        drawerMenu={drawerMenu}\n      />\n      <ProjectsNav title={title} />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}