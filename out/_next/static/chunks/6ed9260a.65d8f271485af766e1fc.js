(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[9],{NEe1:function(e,i,t){"use strict";var s=this&&this.__awaiter||function(e,i,t,s){return new(t||(t=Promise))((function(r,n){function o(e){try{c(s.next(e))}catch(i){n(i)}}function a(e){try{c(s.throw(e))}catch(i){n(i)}}function c(e){var i;e.done?r(e.value):(i=e.value,i instanceof t?i:new t((function(e){e(i)}))).then(o,a)}c((s=s.apply(e,i||[])).next())}))};Object.defineProperty(i,"__esModule",{value:!0}),i.VersionApi=i.VersionApiFactory=i.VersionApiFp=i.VersionApiAxiosParamCreator=i.PublicApi=i.PublicApiFactory=i.PublicApiFp=i.PublicApiAxiosParamCreator=i.HealthApi=i.HealthApiFactory=i.HealthApiFp=i.HealthApiAxiosParamCreator=i.AdminApi=i.AdminApiFactory=i.AdminApiFp=i.AdminApiAxiosParamCreator=void 0;const r=t("QmWs"),n=t("9fye"),o=t("HpxK");i.AdminApiAxiosParamCreator=function(e){return{createIdentity:(i,t={})=>s(this,void 0,void 0,(function*(){const s=r.parse("/identities",!0);let n;e&&(n=e.baseOptions);const o=Object.assign(Object.assign({method:"POST"},n),t),a={};a["Content-Type"]="application/json",s.query=Object.assign(Object.assign(Object.assign({},s.query),{}),t.query),delete s.search;let c=n&&n.headers?n.headers:{};o.headers=Object.assign(Object.assign(Object.assign({},a),c),t.headers);const l="string"!==typeof i||"application/json"===o.headers["Content-Type"];return o.data=l?JSON.stringify(void 0!==i?i:{}):i||"",{url:r.format(s),options:o}})),createRecoveryLink:(i,t={})=>s(this,void 0,void 0,(function*(){const s=r.parse("/recovery/link",!0);let n;e&&(n=e.baseOptions);const o=Object.assign(Object.assign({method:"POST"},n),t),a={};a["Content-Type"]="application/json",s.query=Object.assign(Object.assign(Object.assign({},s.query),{}),t.query),delete s.search;let c=n&&n.headers?n.headers:{};o.headers=Object.assign(Object.assign(Object.assign({},a),c),t.headers);const l="string"!==typeof i||"application/json"===o.headers["Content-Type"];return o.data=l?JSON.stringify(void 0!==i?i:{}):i||"",{url:r.format(s),options:o}})),deleteIdentity:(i,t={})=>s(this,void 0,void 0,(function*(){if(null===i||void 0===i)throw new o.RequiredError("id","Required parameter id was null or undefined when calling deleteIdentity.");const s="/identities/{id}".replace("{id}",encodeURIComponent(String(i))),n=r.parse(s,!0);let a;e&&(a=e.baseOptions);const c=Object.assign(Object.assign({method:"DELETE"},a),t);n.query=Object.assign(Object.assign(Object.assign({},n.query),{}),t.query),delete n.search;let l=a&&a.headers?a.headers:{};return c.headers=Object.assign(Object.assign(Object.assign({},{}),l),t.headers),{url:r.format(n),options:c}})),getIdentity:(i,t={})=>s(this,void 0,void 0,(function*(){if(null===i||void 0===i)throw new o.RequiredError("id","Required parameter id was null or undefined when calling getIdentity.");const s="/identities/{id}".replace("{id}",encodeURIComponent(String(i))),n=r.parse(s,!0);let a;e&&(a=e.baseOptions);const c=Object.assign(Object.assign({method:"GET"},a),t);n.query=Object.assign(Object.assign(Object.assign({},n.query),{}),t.query),delete n.search;let l=a&&a.headers?a.headers:{};return c.headers=Object.assign(Object.assign(Object.assign({},{}),l),t.headers),{url:r.format(n),options:c}})),getSchema:(i,t={})=>s(this,void 0,void 0,(function*(){if(null===i||void 0===i)throw new o.RequiredError("id","Required parameter id was null or undefined when calling getSchema.");const s="/schemas/{id}".replace("{id}",encodeURIComponent(String(i))),n=r.parse(s,!0);let a;e&&(a=e.baseOptions);const c=Object.assign(Object.assign({method:"GET"},a),t);n.query=Object.assign(Object.assign(Object.assign({},n.query),{}),t.query),delete n.search;let l=a&&a.headers?a.headers:{};return c.headers=Object.assign(Object.assign(Object.assign({},{}),l),t.headers),{url:r.format(n),options:c}})),getSelfServiceError:(i,t={})=>s(this,void 0,void 0,(function*(){if(null===i||void 0===i)throw new o.RequiredError("error","Required parameter error was null or undefined when calling getSelfServiceError.");const s=r.parse("/self-service/errors",!0);let n;e&&(n=e.baseOptions);const a=Object.assign(Object.assign({method:"GET"},n),t),c={};void 0!==i&&(c.error=i),s.query=Object.assign(Object.assign(Object.assign({},s.query),c),t.query),delete s.search;let l=n&&n.headers?n.headers:{};return a.headers=Object.assign(Object.assign(Object.assign({},{}),l),t.headers),{url:r.format(s),options:a}})),getSelfServiceLoginFlow:(i,t={})=>s(this,void 0,void 0,(function*(){if(null===i||void 0===i)throw new o.RequiredError("id","Required parameter id was null or undefined when calling getSelfServiceLoginFlow.");const s=r.parse("/self-service/login/flows",!0);let n;e&&(n=e.baseOptions);const a=Object.assign(Object.assign({method:"GET"},n),t),c={};void 0!==i&&(c.id=i),s.query=Object.assign(Object.assign(Object.assign({},s.query),c),t.query),delete s.search;let l=n&&n.headers?n.headers:{};return a.headers=Object.assign(Object.assign(Object.assign({},{}),l),t.headers),{url:r.format(s),options:a}})),getSelfServiceRecoveryFlow:(i,t={})=>s(this,void 0,void 0,(function*(){if(null===i||void 0===i)throw new o.RequiredError("id","Required parameter id was null or undefined when calling getSelfServiceRecoveryFlow.");const s=r.parse("/self-service/recovery/flows",!0);let n;e&&(n=e.baseOptions);const a=Object.assign(Object.assign({method:"GET"},n),t),c={};void 0!==i&&(c.id=i),s.query=Object.assign(Object.assign(Object.assign({},s.query),c),t.query),delete s.search;let l=n&&n.headers?n.headers:{};return a.headers=Object.assign(Object.assign(Object.assign({},{}),l),t.headers),{url:r.format(s),options:a}})),getSelfServiceRegistrationFlow:(i,t={})=>s(this,void 0,void 0,(function*(){if(null===i||void 0===i)throw new o.RequiredError("id","Required parameter id was null or undefined when calling getSelfServiceRegistrationFlow.");const s=r.parse("/self-service/registration/flows",!0);let n;e&&(n=e.baseOptions);const a=Object.assign(Object.assign({method:"GET"},n),t),c={};void 0!==i&&(c.id=i),s.query=Object.assign(Object.assign(Object.assign({},s.query),c),t.query),delete s.search;let l=n&&n.headers?n.headers:{};return a.headers=Object.assign(Object.assign(Object.assign({},{}),l),t.headers),{url:r.format(s),options:a}})),getSelfServiceSettingsFlow:(i,t={})=>s(this,void 0,void 0,(function*(){if(null===i||void 0===i)throw new o.RequiredError("id","Required parameter id was null or undefined when calling getSelfServiceSettingsFlow.");const s=r.parse("/self-service/settings/flows",!0);let n;e&&(n=e.baseOptions);const a=Object.assign(Object.assign({method:"GET"},n),t),c={},l={};if(e&&e.apiKey){const i="function"===typeof e.apiKey?yield e.apiKey("X-Session-Token"):yield e.apiKey;c["X-Session-Token"]=i}void 0!==i&&(l.id=i),s.query=Object.assign(Object.assign(Object.assign({},s.query),l),t.query),delete s.search;let u=n&&n.headers?n.headers:{};return a.headers=Object.assign(Object.assign(Object.assign({},c),u),t.headers),{url:r.format(s),options:a}})),getSelfServiceVerificationFlow:(i,t={})=>s(this,void 0,void 0,(function*(){if(null===i||void 0===i)throw new o.RequiredError("id","Required parameter id was null or undefined when calling getSelfServiceVerificationFlow.");const s=r.parse("/self-service/verification/flows",!0);let n;e&&(n=e.baseOptions);const a=Object.assign(Object.assign({method:"GET"},n),t),c={};void 0!==i&&(c.id=i),s.query=Object.assign(Object.assign(Object.assign({},s.query),c),t.query),delete s.search;let l=n&&n.headers?n.headers:{};return a.headers=Object.assign(Object.assign(Object.assign({},{}),l),t.headers),{url:r.format(s),options:a}})),listIdentities:(i,t,n={})=>s(this,void 0,void 0,(function*(){const s=r.parse("/identities",!0);let o;e&&(o=e.baseOptions);const a=Object.assign(Object.assign({method:"GET"},o),n),c={};void 0!==i&&(c.per_page=i),void 0!==t&&(c.page=t),s.query=Object.assign(Object.assign(Object.assign({},s.query),c),n.query),delete s.search;let l=o&&o.headers?o.headers:{};return a.headers=Object.assign(Object.assign(Object.assign({},{}),l),n.headers),{url:r.format(s),options:a}})),prometheus:(i={})=>s(this,void 0,void 0,(function*(){const t=r.parse("/metrics/prometheus",!0);let s;e&&(s=e.baseOptions);const n=Object.assign(Object.assign({method:"GET"},s),i);t.query=Object.assign(Object.assign(Object.assign({},t.query),{}),i.query),delete t.search;let o=s&&s.headers?s.headers:{};return n.headers=Object.assign(Object.assign(Object.assign({},{}),o),i.headers),{url:r.format(t),options:n}})),updateIdentity:(i,t,n={})=>s(this,void 0,void 0,(function*(){if(null===i||void 0===i)throw new o.RequiredError("id","Required parameter id was null or undefined when calling updateIdentity.");const s="/identities/{id}".replace("{id}",encodeURIComponent(String(i))),a=r.parse(s,!0);let c;e&&(c=e.baseOptions);const l=Object.assign(Object.assign({method:"PUT"},c),n),u={};u["Content-Type"]="application/json",a.query=Object.assign(Object.assign(Object.assign({},a.query),{}),n.query),delete a.search;let d=c&&c.headers?c.headers:{};l.headers=Object.assign(Object.assign(Object.assign({},u),d),n.headers);const g="string"!==typeof t||"application/json"===l.headers["Content-Type"];return l.data=g?JSON.stringify(void 0!==t?t:{}):t||"",{url:r.format(a),options:l}}))}},i.AdminApiFp=function(e){return{createIdentity(t,r){return s(this,void 0,void 0,(function*(){const s=yield i.AdminApiAxiosParamCreator(e).createIdentity(t,r);return(e=n.default,i=o.BASE_PATH)=>{const t=Object.assign(Object.assign({},s.options),{url:i+s.url});return e.request(t)}}))},createRecoveryLink(t,r){return s(this,void 0,void 0,(function*(){const s=yield i.AdminApiAxiosParamCreator(e).createRecoveryLink(t,r);return(e=n.default,i=o.BASE_PATH)=>{const t=Object.assign(Object.assign({},s.options),{url:i+s.url});return e.request(t)}}))},deleteIdentity(t,r){return s(this,void 0,void 0,(function*(){const s=yield i.AdminApiAxiosParamCreator(e).deleteIdentity(t,r);return(e=n.default,i=o.BASE_PATH)=>{const t=Object.assign(Object.assign({},s.options),{url:i+s.url});return e.request(t)}}))},getIdentity(t,r){return s(this,void 0,void 0,(function*(){const s=yield i.AdminApiAxiosParamCreator(e).getIdentity(t,r);return(e=n.default,i=o.BASE_PATH)=>{const t=Object.assign(Object.assign({},s.options),{url:i+s.url});return e.request(t)}}))},getSchema(t,r){return s(this,void 0,void 0,(function*(){const s=yield i.AdminApiAxiosParamCreator(e).getSchema(t,r);return(e=n.default,i=o.BASE_PATH)=>{const t=Object.assign(Object.assign({},s.options),{url:i+s.url});return e.request(t)}}))},getSelfServiceError(t,r){return s(this,void 0,void 0,(function*(){const s=yield i.AdminApiAxiosParamCreator(e).getSelfServiceError(t,r);return(e=n.default,i=o.BASE_PATH)=>{const t=Object.assign(Object.assign({},s.options),{url:i+s.url});return e.request(t)}}))},getSelfServiceLoginFlow(t,r){return s(this,void 0,void 0,(function*(){const s=yield i.AdminApiAxiosParamCreator(e).getSelfServiceLoginFlow(t,r);return(e=n.default,i=o.BASE_PATH)=>{const t=Object.assign(Object.assign({},s.options),{url:i+s.url});return e.request(t)}}))},getSelfServiceRecoveryFlow(t,r){return s(this,void 0,void 0,(function*(){const s=yield i.AdminApiAxiosParamCreator(e).getSelfServiceRecoveryFlow(t,r);return(e=n.default,i=o.BASE_PATH)=>{const t=Object.assign(Object.assign({},s.options),{url:i+s.url});return e.request(t)}}))},getSelfServiceRegistrationFlow(t,r){return s(this,void 0,void 0,(function*(){const s=yield i.AdminApiAxiosParamCreator(e).getSelfServiceRegistrationFlow(t,r);return(e=n.default,i=o.BASE_PATH)=>{const t=Object.assign(Object.assign({},s.options),{url:i+s.url});return e.request(t)}}))},getSelfServiceSettingsFlow(t,r){return s(this,void 0,void 0,(function*(){const s=yield i.AdminApiAxiosParamCreator(e).getSelfServiceSettingsFlow(t,r);return(e=n.default,i=o.BASE_PATH)=>{const t=Object.assign(Object.assign({},s.options),{url:i+s.url});return e.request(t)}}))},getSelfServiceVerificationFlow(t,r){return s(this,void 0,void 0,(function*(){const s=yield i.AdminApiAxiosParamCreator(e).getSelfServiceVerificationFlow(t,r);return(e=n.default,i=o.BASE_PATH)=>{const t=Object.assign(Object.assign({},s.options),{url:i+s.url});return e.request(t)}}))},listIdentities(t,r,a){return s(this,void 0,void 0,(function*(){const s=yield i.AdminApiAxiosParamCreator(e).listIdentities(t,r,a);return(e=n.default,i=o.BASE_PATH)=>{const t=Object.assign(Object.assign({},s.options),{url:i+s.url});return e.request(t)}}))},prometheus(t){return s(this,void 0,void 0,(function*(){const s=yield i.AdminApiAxiosParamCreator(e).prometheus(t);return(e=n.default,i=o.BASE_PATH)=>{const t=Object.assign(Object.assign({},s.options),{url:i+s.url});return e.request(t)}}))},updateIdentity(t,r,a){return s(this,void 0,void 0,(function*(){const s=yield i.AdminApiAxiosParamCreator(e).updateIdentity(t,r,a);return(e=n.default,i=o.BASE_PATH)=>{const t=Object.assign(Object.assign({},s.options),{url:i+s.url});return e.request(t)}}))}}},i.AdminApiFactory=function(e,t,s){return{createIdentity:(r,n)=>i.AdminApiFp(e).createIdentity(r,n).then((e=>e(s,t))),createRecoveryLink:(r,n)=>i.AdminApiFp(e).createRecoveryLink(r,n).then((e=>e(s,t))),deleteIdentity:(r,n)=>i.AdminApiFp(e).deleteIdentity(r,n).then((e=>e(s,t))),getIdentity:(r,n)=>i.AdminApiFp(e).getIdentity(r,n).then((e=>e(s,t))),getSchema:(r,n)=>i.AdminApiFp(e).getSchema(r,n).then((e=>e(s,t))),getSelfServiceError:(r,n)=>i.AdminApiFp(e).getSelfServiceError(r,n).then((e=>e(s,t))),getSelfServiceLoginFlow:(r,n)=>i.AdminApiFp(e).getSelfServiceLoginFlow(r,n).then((e=>e(s,t))),getSelfServiceRecoveryFlow:(r,n)=>i.AdminApiFp(e).getSelfServiceRecoveryFlow(r,n).then((e=>e(s,t))),getSelfServiceRegistrationFlow:(r,n)=>i.AdminApiFp(e).getSelfServiceRegistrationFlow(r,n).then((e=>e(s,t))),getSelfServiceSettingsFlow:(r,n)=>i.AdminApiFp(e).getSelfServiceSettingsFlow(r,n).then((e=>e(s,t))),getSelfServiceVerificationFlow:(r,n)=>i.AdminApiFp(e).getSelfServiceVerificationFlow(r,n).then((e=>e(s,t))),listIdentities:(r,n,o)=>i.AdminApiFp(e).listIdentities(r,n,o).then((e=>e(s,t))),prometheus:r=>i.AdminApiFp(e).prometheus(r).then((e=>e(s,t))),updateIdentity:(r,n,o)=>i.AdminApiFp(e).updateIdentity(r,n,o).then((e=>e(s,t)))}};class a extends o.BaseAPI{createIdentity(e,t){return i.AdminApiFp(this.configuration).createIdentity(e,t).then((e=>e(this.axios,this.basePath)))}createRecoveryLink(e,t){return i.AdminApiFp(this.configuration).createRecoveryLink(e,t).then((e=>e(this.axios,this.basePath)))}deleteIdentity(e,t){return i.AdminApiFp(this.configuration).deleteIdentity(e,t).then((e=>e(this.axios,this.basePath)))}getIdentity(e,t){return i.AdminApiFp(this.configuration).getIdentity(e,t).then((e=>e(this.axios,this.basePath)))}getSchema(e,t){return i.AdminApiFp(this.configuration).getSchema(e,t).then((e=>e(this.axios,this.basePath)))}getSelfServiceError(e,t){return i.AdminApiFp(this.configuration).getSelfServiceError(e,t).then((e=>e(this.axios,this.basePath)))}getSelfServiceLoginFlow(e,t){return i.AdminApiFp(this.configuration).getSelfServiceLoginFlow(e,t).then((e=>e(this.axios,this.basePath)))}getSelfServiceRecoveryFlow(e,t){return i.AdminApiFp(this.configuration).getSelfServiceRecoveryFlow(e,t).then((e=>e(this.axios,this.basePath)))}getSelfServiceRegistrationFlow(e,t){return i.AdminApiFp(this.configuration).getSelfServiceRegistrationFlow(e,t).then((e=>e(this.axios,this.basePath)))}getSelfServiceSettingsFlow(e,t){return i.AdminApiFp(this.configuration).getSelfServiceSettingsFlow(e,t).then((e=>e(this.axios,this.basePath)))}getSelfServiceVerificationFlow(e,t){return i.AdminApiFp(this.configuration).getSelfServiceVerificationFlow(e,t).then((e=>e(this.axios,this.basePath)))}listIdentities(e,t,s){return i.AdminApiFp(this.configuration).listIdentities(e,t,s).then((e=>e(this.axios,this.basePath)))}prometheus(e){return i.AdminApiFp(this.configuration).prometheus(e).then((e=>e(this.axios,this.basePath)))}updateIdentity(e,t,s){return i.AdminApiFp(this.configuration).updateIdentity(e,t,s).then((e=>e(this.axios,this.basePath)))}}i.AdminApi=a,i.HealthApiAxiosParamCreator=function(e){return{isInstanceAlive:(i={})=>s(this,void 0,void 0,(function*(){const t=r.parse("/health/alive",!0);let s;e&&(s=e.baseOptions);const n=Object.assign(Object.assign({method:"GET"},s),i);t.query=Object.assign(Object.assign(Object.assign({},t.query),{}),i.query),delete t.search;let o=s&&s.headers?s.headers:{};return n.headers=Object.assign(Object.assign(Object.assign({},{}),o),i.headers),{url:r.format(t),options:n}})),isInstanceReady:(i={})=>s(this,void 0,void 0,(function*(){const t=r.parse("/health/ready",!0);let s;e&&(s=e.baseOptions);const n=Object.assign(Object.assign({method:"GET"},s),i);t.query=Object.assign(Object.assign(Object.assign({},t.query),{}),i.query),delete t.search;let o=s&&s.headers?s.headers:{};return n.headers=Object.assign(Object.assign(Object.assign({},{}),o),i.headers),{url:r.format(t),options:n}}))}},i.HealthApiFp=function(e){return{isInstanceAlive(t){return s(this,void 0,void 0,(function*(){const s=yield i.HealthApiAxiosParamCreator(e).isInstanceAlive(t);return(e=n.default,i=o.BASE_PATH)=>{const t=Object.assign(Object.assign({},s.options),{url:i+s.url});return e.request(t)}}))},isInstanceReady(t){return s(this,void 0,void 0,(function*(){const s=yield i.HealthApiAxiosParamCreator(e).isInstanceReady(t);return(e=n.default,i=o.BASE_PATH)=>{const t=Object.assign(Object.assign({},s.options),{url:i+s.url});return e.request(t)}}))}}},i.HealthApiFactory=function(e,t,s){return{isInstanceAlive:r=>i.HealthApiFp(e).isInstanceAlive(r).then((e=>e(s,t))),isInstanceReady:r=>i.HealthApiFp(e).isInstanceReady(r).then((e=>e(s,t)))}};class c extends o.BaseAPI{isInstanceAlive(e){return i.HealthApiFp(this.configuration).isInstanceAlive(e).then((e=>e(this.axios,this.basePath)))}isInstanceReady(e){return i.HealthApiFp(this.configuration).isInstanceReady(e).then((e=>e(this.axios,this.basePath)))}}i.HealthApi=c,i.PublicApiAxiosParamCreator=function(e){return{completeSelfServiceBrowserSettingsOIDCSettingsFlow:(i={})=>s(this,void 0,void 0,(function*(){const t=r.parse("/self-service/browser/flows/registration/strategies/oidc/settings/connections",!0);let s;e&&(s=e.baseOptions);const n=Object.assign(Object.assign({method:"POST"},s),i);t.query=Object.assign(Object.assign(Object.assign({},t.query),{}),i.query),delete t.search;let o=s&&s.headers?s.headers:{};return n.headers=Object.assign(Object.assign(Object.assign({},{}),o),i.headers),{url:r.format(t),options:n}})),completeSelfServiceLoginFlowWithPasswordMethod:(i,t,n={})=>s(this,void 0,void 0,(function*(){if(null===i||void 0===i)throw new o.RequiredError("flow","Required parameter flow was null or undefined when calling completeSelfServiceLoginFlowWithPasswordMethod.");const s=r.parse("/self-service/login/methods/password",!0);let a;e&&(a=e.baseOptions);const c=Object.assign(Object.assign({method:"POST"},a),n),l={},u={};void 0!==i&&(u.flow=i),l["Content-Type"]="application/json",s.query=Object.assign(Object.assign(Object.assign({},s.query),u),n.query),delete s.search;let d=a&&a.headers?a.headers:{};c.headers=Object.assign(Object.assign(Object.assign({},l),d),n.headers);const g="string"!==typeof t||"application/json"===c.headers["Content-Type"];return c.data=g?JSON.stringify(void 0!==t?t:{}):t||"",{url:r.format(s),options:c}})),completeSelfServiceRecoveryFlowWithLinkMethod:(i,t,n,o={})=>s(this,void 0,void 0,(function*(){const s=r.parse("/self-service/recovery/methods/link",!0);let a;e&&(a=e.baseOptions);const c=Object.assign(Object.assign({method:"POST"},a),o),l={},u={};void 0!==i&&(u.token=i),void 0!==t&&(u.flow=t),l["Content-Type"]="application/json",s.query=Object.assign(Object.assign(Object.assign({},s.query),u),o.query),delete s.search;let d=a&&a.headers?a.headers:{};c.headers=Object.assign(Object.assign(Object.assign({},l),d),o.headers);const g="string"!==typeof n||"application/json"===c.headers["Content-Type"];return c.data=g?JSON.stringify(void 0!==n?n:{}):n||"",{url:r.format(s),options:c}})),completeSelfServiceRegistrationFlowWithPasswordMethod:(i,t,n={})=>s(this,void 0,void 0,(function*(){const s=r.parse("/self-service/registration/methods/password",!0);let o;e&&(o=e.baseOptions);const a=Object.assign(Object.assign({method:"POST"},o),n),c={},l={};void 0!==i&&(l.flow=i),c["Content-Type"]="application/json",s.query=Object.assign(Object.assign(Object.assign({},s.query),l),n.query),delete s.search;let u=o&&o.headers?o.headers:{};a.headers=Object.assign(Object.assign(Object.assign({},c),u),n.headers);const d="string"!==typeof t||"application/json"===a.headers["Content-Type"];return a.data=d?JSON.stringify(void 0!==t?t:{}):t||"",{url:r.format(s),options:a}})),completeSelfServiceSettingsFlowWithPasswordMethod:(i,t,n={})=>s(this,void 0,void 0,(function*(){const s=r.parse("/self-service/settings/methods/password",!0);let o;e&&(o=e.baseOptions);const a=Object.assign(Object.assign({method:"POST"},o),n),c={},l={};if(e&&e.apiKey){const i="function"===typeof e.apiKey?yield e.apiKey("X-Session-Token"):yield e.apiKey;c["X-Session-Token"]=i}void 0!==i&&(l.flow=i),c["Content-Type"]="application/json",s.query=Object.assign(Object.assign(Object.assign({},s.query),l),n.query),delete s.search;let u=o&&o.headers?o.headers:{};a.headers=Object.assign(Object.assign(Object.assign({},c),u),n.headers);const d="string"!==typeof t||"application/json"===a.headers["Content-Type"];return a.data=d?JSON.stringify(void 0!==t?t:{}):t||"",{url:r.format(s),options:a}})),completeSelfServiceSettingsFlowWithProfileMethod:(i,t,n={})=>s(this,void 0,void 0,(function*(){const s=r.parse("/self-service/settings/methods/profile",!0);let o;e&&(o=e.baseOptions);const a=Object.assign(Object.assign({method:"POST"},o),n),c={},l={};if(e&&e.apiKey){const i="function"===typeof e.apiKey?yield e.apiKey("X-Session-Token"):yield e.apiKey;c["X-Session-Token"]=i}void 0!==i&&(l.flow=i),c["Content-Type"]="application/json",s.query=Object.assign(Object.assign(Object.assign({},s.query),l),n.query),delete s.search;let u=o&&o.headers?o.headers:{};a.headers=Object.assign(Object.assign(Object.assign({},c),u),n.headers);const d="string"!==typeof t||"application/json"===a.headers["Content-Type"];return a.data=d?JSON.stringify(void 0!==t?t:{}):t||"",{url:r.format(s),options:a}})),completeSelfServiceVerificationFlowWithLinkMethod:(i,t,n,o={})=>s(this,void 0,void 0,(function*(){const s=r.parse("/self-service/verification/methods/link",!0);let a;e&&(a=e.baseOptions);const c=Object.assign(Object.assign({method:"POST"},a),o),l={},u={};void 0!==i&&(u.token=i),void 0!==t&&(u.flow=t),l["Content-Type"]="application/json",s.query=Object.assign(Object.assign(Object.assign({},s.query),u),o.query),delete s.search;let d=a&&a.headers?a.headers:{};c.headers=Object.assign(Object.assign(Object.assign({},l),d),o.headers);const g="string"!==typeof n||"application/json"===c.headers["Content-Type"];return c.data=g?JSON.stringify(void 0!==n?n:{}):n||"",{url:r.format(s),options:c}})),getSchema:(i,t={})=>s(this,void 0,void 0,(function*(){if(null===i||void 0===i)throw new o.RequiredError("id","Required parameter id was null or undefined when calling getSchema.");const s="/schemas/{id}".replace("{id}",encodeURIComponent(String(i))),n=r.parse(s,!0);let a;e&&(a=e.baseOptions);const c=Object.assign(Object.assign({method:"GET"},a),t);n.query=Object.assign(Object.assign(Object.assign({},n.query),{}),t.query),delete n.search;let l=a&&a.headers?a.headers:{};return c.headers=Object.assign(Object.assign(Object.assign({},{}),l),t.headers),{url:r.format(n),options:c}})),getSelfServiceError:(i,t={})=>s(this,void 0,void 0,(function*(){if(null===i||void 0===i)throw new o.RequiredError("error","Required parameter error was null or undefined when calling getSelfServiceError.");const s=r.parse("/self-service/errors",!0);let n;e&&(n=e.baseOptions);const a=Object.assign(Object.assign({method:"GET"},n),t),c={};void 0!==i&&(c.error=i),s.query=Object.assign(Object.assign(Object.assign({},s.query),c),t.query),delete s.search;let l=n&&n.headers?n.headers:{};return a.headers=Object.assign(Object.assign(Object.assign({},{}),l),t.headers),{url:r.format(s),options:a}})),getSelfServiceLoginFlow:(i,t={})=>s(this,void 0,void 0,(function*(){if(null===i||void 0===i)throw new o.RequiredError("id","Required parameter id was null or undefined when calling getSelfServiceLoginFlow.");const s=r.parse("/self-service/login/flows",!0);let n;e&&(n=e.baseOptions);const a=Object.assign(Object.assign({method:"GET"},n),t),c={};void 0!==i&&(c.id=i),s.query=Object.assign(Object.assign(Object.assign({},s.query),c),t.query),delete s.search;let l=n&&n.headers?n.headers:{};return a.headers=Object.assign(Object.assign(Object.assign({},{}),l),t.headers),{url:r.format(s),options:a}})),getSelfServiceRecoveryFlow:(i,t={})=>s(this,void 0,void 0,(function*(){if(null===i||void 0===i)throw new o.RequiredError("id","Required parameter id was null or undefined when calling getSelfServiceRecoveryFlow.");const s=r.parse("/self-service/recovery/flows",!0);let n;e&&(n=e.baseOptions);const a=Object.assign(Object.assign({method:"GET"},n),t),c={};void 0!==i&&(c.id=i),s.query=Object.assign(Object.assign(Object.assign({},s.query),c),t.query),delete s.search;let l=n&&n.headers?n.headers:{};return a.headers=Object.assign(Object.assign(Object.assign({},{}),l),t.headers),{url:r.format(s),options:a}})),getSelfServiceRegistrationFlow:(i,t={})=>s(this,void 0,void 0,(function*(){if(null===i||void 0===i)throw new o.RequiredError("id","Required parameter id was null or undefined when calling getSelfServiceRegistrationFlow.");const s=r.parse("/self-service/registration/flows",!0);let n;e&&(n=e.baseOptions);const a=Object.assign(Object.assign({method:"GET"},n),t),c={};void 0!==i&&(c.id=i),s.query=Object.assign(Object.assign(Object.assign({},s.query),c),t.query),delete s.search;let l=n&&n.headers?n.headers:{};return a.headers=Object.assign(Object.assign(Object.assign({},{}),l),t.headers),{url:r.format(s),options:a}})),getSelfServiceSettingsFlow:(i,t={})=>s(this,void 0,void 0,(function*(){if(null===i||void 0===i)throw new o.RequiredError("id","Required parameter id was null or undefined when calling getSelfServiceSettingsFlow.");const s=r.parse("/self-service/settings/flows",!0);let n;e&&(n=e.baseOptions);const a=Object.assign(Object.assign({method:"GET"},n),t),c={},l={};if(e&&e.apiKey){const i="function"===typeof e.apiKey?yield e.apiKey("X-Session-Token"):yield e.apiKey;c["X-Session-Token"]=i}void 0!==i&&(l.id=i),s.query=Object.assign(Object.assign(Object.assign({},s.query),l),t.query),delete s.search;let u=n&&n.headers?n.headers:{};return a.headers=Object.assign(Object.assign(Object.assign({},c),u),t.headers),{url:r.format(s),options:a}})),getSelfServiceVerificationFlow:(i,t={})=>s(this,void 0,void 0,(function*(){if(null===i||void 0===i)throw new o.RequiredError("id","Required parameter id was null or undefined when calling getSelfServiceVerificationFlow.");const s=r.parse("/self-service/verification/flows",!0);let n;e&&(n=e.baseOptions);const a=Object.assign(Object.assign({method:"GET"},n),t),c={};void 0!==i&&(c.id=i),s.query=Object.assign(Object.assign(Object.assign({},s.query),c),t.query),delete s.search;let l=n&&n.headers?n.headers:{};return a.headers=Object.assign(Object.assign(Object.assign({},{}),l),t.headers),{url:r.format(s),options:a}})),initializeSelfServiceBrowserLogoutFlow:(i={})=>s(this,void 0,void 0,(function*(){const t=r.parse("/self-service/browser/flows/logout",!0);let s;e&&(s=e.baseOptions);const n=Object.assign(Object.assign({method:"GET"},s),i);t.query=Object.assign(Object.assign(Object.assign({},t.query),{}),i.query),delete t.search;let o=s&&s.headers?s.headers:{};return n.headers=Object.assign(Object.assign(Object.assign({},{}),o),i.headers),{url:r.format(t),options:n}})),initializeSelfServiceLoginViaAPIFlow:(i,t={})=>s(this,void 0,void 0,(function*(){const s=r.parse("/self-service/login/api",!0);let n;e&&(n=e.baseOptions);const o=Object.assign(Object.assign({method:"GET"},n),t),a={};void 0!==i&&(a.refresh=i),s.query=Object.assign(Object.assign(Object.assign({},s.query),a),t.query),delete s.search;let c=n&&n.headers?n.headers:{};return o.headers=Object.assign(Object.assign(Object.assign({},{}),c),t.headers),{url:r.format(s),options:o}})),initializeSelfServiceLoginViaBrowserFlow:(i={})=>s(this,void 0,void 0,(function*(){const t=r.parse("/self-service/login/browser",!0);let s;e&&(s=e.baseOptions);const n=Object.assign(Object.assign({method:"GET"},s),i);t.query=Object.assign(Object.assign(Object.assign({},t.query),{}),i.query),delete t.search;let o=s&&s.headers?s.headers:{};return n.headers=Object.assign(Object.assign(Object.assign({},{}),o),i.headers),{url:r.format(t),options:n}})),initializeSelfServiceRecoveryViaAPIFlow:(i={})=>s(this,void 0,void 0,(function*(){const t=r.parse("/self-service/recovery/api",!0);let s;e&&(s=e.baseOptions);const n=Object.assign(Object.assign({method:"GET"},s),i);t.query=Object.assign(Object.assign(Object.assign({},t.query),{}),i.query),delete t.search;let o=s&&s.headers?s.headers:{};return n.headers=Object.assign(Object.assign(Object.assign({},{}),o),i.headers),{url:r.format(t),options:n}})),initializeSelfServiceRecoveryViaBrowserFlow:(i={})=>s(this,void 0,void 0,(function*(){const t=r.parse("/self-service/recovery/browser",!0);let s;e&&(s=e.baseOptions);const n=Object.assign(Object.assign({method:"GET"},s),i);t.query=Object.assign(Object.assign(Object.assign({},t.query),{}),i.query),delete t.search;let o=s&&s.headers?s.headers:{};return n.headers=Object.assign(Object.assign(Object.assign({},{}),o),i.headers),{url:r.format(t),options:n}})),initializeSelfServiceRegistrationViaAPIFlow:(i={})=>s(this,void 0,void 0,(function*(){const t=r.parse("/self-service/registration/api",!0);let s;e&&(s=e.baseOptions);const n=Object.assign(Object.assign({method:"GET"},s),i);t.query=Object.assign(Object.assign(Object.assign({},t.query),{}),i.query),delete t.search;let o=s&&s.headers?s.headers:{};return n.headers=Object.assign(Object.assign(Object.assign({},{}),o),i.headers),{url:r.format(t),options:n}})),initializeSelfServiceRegistrationViaBrowserFlow:(i={})=>s(this,void 0,void 0,(function*(){const t=r.parse("/self-service/registration/browser",!0);let s;e&&(s=e.baseOptions);const n=Object.assign(Object.assign({method:"GET"},s),i);t.query=Object.assign(Object.assign(Object.assign({},t.query),{}),i.query),delete t.search;let o=s&&s.headers?s.headers:{};return n.headers=Object.assign(Object.assign(Object.assign({},{}),o),i.headers),{url:r.format(t),options:n}})),initializeSelfServiceSettingsViaAPIFlow:(i={})=>s(this,void 0,void 0,(function*(){const t=r.parse("/self-service/settings/api",!0);let s;e&&(s=e.baseOptions);const n=Object.assign(Object.assign({method:"GET"},s),i),o={};if(e&&e.apiKey){const i="function"===typeof e.apiKey?yield e.apiKey("X-Session-Token"):yield e.apiKey;o["X-Session-Token"]=i}t.query=Object.assign(Object.assign(Object.assign({},t.query),{}),i.query),delete t.search;let a=s&&s.headers?s.headers:{};return n.headers=Object.assign(Object.assign(Object.assign({},o),a),i.headers),{url:r.format(t),options:n}})),initializeSelfServiceSettingsViaBrowserFlow:(i={})=>s(this,void 0,void 0,(function*(){const t=r.parse("/self-service/settings/browser/flows",!0);let s;e&&(s=e.baseOptions);const n=Object.assign(Object.assign({method:"GET"},s),i),o={};if(e&&e.apiKey){const i="function"===typeof e.apiKey?yield e.apiKey("X-Session-Token"):yield e.apiKey;o["X-Session-Token"]=i}t.query=Object.assign(Object.assign(Object.assign({},t.query),{}),i.query),delete t.search;let a=s&&s.headers?s.headers:{};return n.headers=Object.assign(Object.assign(Object.assign({},o),a),i.headers),{url:r.format(t),options:n}})),initializeSelfServiceVerificationViaAPIFlow:(i={})=>s(this,void 0,void 0,(function*(){const t=r.parse("/self-service/verification/api",!0);let s;e&&(s=e.baseOptions);const n=Object.assign(Object.assign({method:"GET"},s),i);t.query=Object.assign(Object.assign(Object.assign({},t.query),{}),i.query),delete t.search;let o=s&&s.headers?s.headers:{};return n.headers=Object.assign(Object.assign(Object.assign({},{}),o),i.headers),{url:r.format(t),options:n}})),initializeSelfServiceVerificationViaBrowserFlow:(i={})=>s(this,void 0,void 0,(function*(){const t=r.parse("/self-service/verification/browser",!0);let s;e&&(s=e.baseOptions);const n=Object.assign(Object.assign({method:"GET"},s),i);t.query=Object.assign(Object.assign(Object.assign({},t.query),{}),i.query),delete t.search;let o=s&&s.headers?s.headers:{};return n.headers=Object.assign(Object.assign(Object.assign({},{}),o),i.headers),{url:r.format(t),options:n}})),revokeSession:(i,t={})=>s(this,void 0,void 0,(function*(){if(null===i||void 0===i)throw new o.RequiredError("body","Required parameter body was null or undefined when calling revokeSession.");const s=r.parse("/sessions",!0);let n;e&&(n=e.baseOptions);const a=Object.assign(Object.assign({method:"DELETE"},n),t),c={};c["Content-Type"]="application/json",s.query=Object.assign(Object.assign(Object.assign({},s.query),{}),t.query),delete s.search;let l=n&&n.headers?n.headers:{};a.headers=Object.assign(Object.assign(Object.assign({},c),l),t.headers);const u="string"!==typeof i||"application/json"===a.headers["Content-Type"];return a.data=u?JSON.stringify(void 0!==i?i:{}):i||"",{url:r.format(s),options:a}})),whoami:(i,t,n={})=>s(this,void 0,void 0,(function*(){const s=r.parse("/sessions/whoami",!0);let o;e&&(o=e.baseOptions);const a=Object.assign(Object.assign({method:"GET"},o),n),c={},l={};if(e&&e.apiKey){const i="function"===typeof e.apiKey?yield e.apiKey("X-Session-Token"):yield e.apiKey;c["X-Session-Token"]=i}void 0!==t&&(l.Authorization=t),void 0!==i&&null!==i&&(c.Cookie=String(i)),s.query=Object.assign(Object.assign(Object.assign({},s.query),l),n.query),delete s.search;let u=o&&o.headers?o.headers:{};return a.headers=Object.assign(Object.assign(Object.assign({},c),u),n.headers),{url:r.format(s),options:a}}))}},i.PublicApiFp=function(e){return{completeSelfServiceBrowserSettingsOIDCSettingsFlow(t){return s(this,void 0,void 0,(function*(){const s=yield i.PublicApiAxiosParamCreator(e).completeSelfServiceBrowserSettingsOIDCSettingsFlow(t);return(e=n.default,i=o.BASE_PATH)=>{const t=Object.assign(Object.assign({},s.options),{url:i+s.url});return e.request(t)}}))},completeSelfServiceLoginFlowWithPasswordMethod(t,r,a){return s(this,void 0,void 0,(function*(){const s=yield i.PublicApiAxiosParamCreator(e).completeSelfServiceLoginFlowWithPasswordMethod(t,r,a);return(e=n.default,i=o.BASE_PATH)=>{const t=Object.assign(Object.assign({},s.options),{url:i+s.url});return e.request(t)}}))},completeSelfServiceRecoveryFlowWithLinkMethod(t,r,a,c){return s(this,void 0,void 0,(function*(){const s=yield i.PublicApiAxiosParamCreator(e).completeSelfServiceRecoveryFlowWithLinkMethod(t,r,a,c);return(e=n.default,i=o.BASE_PATH)=>{const t=Object.assign(Object.assign({},s.options),{url:i+s.url});return e.request(t)}}))},completeSelfServiceRegistrationFlowWithPasswordMethod(t,r,a){return s(this,void 0,void 0,(function*(){const s=yield i.PublicApiAxiosParamCreator(e).completeSelfServiceRegistrationFlowWithPasswordMethod(t,r,a);return(e=n.default,i=o.BASE_PATH)=>{const t=Object.assign(Object.assign({},s.options),{url:i+s.url});return e.request(t)}}))},completeSelfServiceSettingsFlowWithPasswordMethod(t,r,a){return s(this,void 0,void 0,(function*(){const s=yield i.PublicApiAxiosParamCreator(e).completeSelfServiceSettingsFlowWithPasswordMethod(t,r,a);return(e=n.default,i=o.BASE_PATH)=>{const t=Object.assign(Object.assign({},s.options),{url:i+s.url});return e.request(t)}}))},completeSelfServiceSettingsFlowWithProfileMethod(t,r,a){return s(this,void 0,void 0,(function*(){const s=yield i.PublicApiAxiosParamCreator(e).completeSelfServiceSettingsFlowWithProfileMethod(t,r,a);return(e=n.default,i=o.BASE_PATH)=>{const t=Object.assign(Object.assign({},s.options),{url:i+s.url});return e.request(t)}}))},completeSelfServiceVerificationFlowWithLinkMethod(t,r,a,c){return s(this,void 0,void 0,(function*(){const s=yield i.PublicApiAxiosParamCreator(e).completeSelfServiceVerificationFlowWithLinkMethod(t,r,a,c);return(e=n.default,i=o.BASE_PATH)=>{const t=Object.assign(Object.assign({},s.options),{url:i+s.url});return e.request(t)}}))},getSchema(t,r){return s(this,void 0,void 0,(function*(){const s=yield i.PublicApiAxiosParamCreator(e).getSchema(t,r);return(e=n.default,i=o.BASE_PATH)=>{const t=Object.assign(Object.assign({},s.options),{url:i+s.url});return e.request(t)}}))},getSelfServiceError(t,r){return s(this,void 0,void 0,(function*(){const s=yield i.PublicApiAxiosParamCreator(e).getSelfServiceError(t,r);return(e=n.default,i=o.BASE_PATH)=>{const t=Object.assign(Object.assign({},s.options),{url:i+s.url});return e.request(t)}}))},getSelfServiceLoginFlow(t,r){return s(this,void 0,void 0,(function*(){const s=yield i.PublicApiAxiosParamCreator(e).getSelfServiceLoginFlow(t,r);return(e=n.default,i=o.BASE_PATH)=>{const t=Object.assign(Object.assign({},s.options),{url:i+s.url});return e.request(t)}}))},getSelfServiceRecoveryFlow(t,r){return s(this,void 0,void 0,(function*(){const s=yield i.PublicApiAxiosParamCreator(e).getSelfServiceRecoveryFlow(t,r);return(e=n.default,i=o.BASE_PATH)=>{const t=Object.assign(Object.assign({},s.options),{url:i+s.url});return e.request(t)}}))},getSelfServiceRegistrationFlow(t,r){return s(this,void 0,void 0,(function*(){const s=yield i.PublicApiAxiosParamCreator(e).getSelfServiceRegistrationFlow(t,r);return(e=n.default,i=o.BASE_PATH)=>{const t=Object.assign(Object.assign({},s.options),{url:i+s.url});return e.request(t)}}))},getSelfServiceSettingsFlow(t,r){return s(this,void 0,void 0,(function*(){const s=yield i.PublicApiAxiosParamCreator(e).getSelfServiceSettingsFlow(t,r);return(e=n.default,i=o.BASE_PATH)=>{const t=Object.assign(Object.assign({},s.options),{url:i+s.url});return e.request(t)}}))},getSelfServiceVerificationFlow(t,r){return s(this,void 0,void 0,(function*(){const s=yield i.PublicApiAxiosParamCreator(e).getSelfServiceVerificationFlow(t,r);return(e=n.default,i=o.BASE_PATH)=>{const t=Object.assign(Object.assign({},s.options),{url:i+s.url});return e.request(t)}}))},initializeSelfServiceBrowserLogoutFlow(t){return s(this,void 0,void 0,(function*(){const s=yield i.PublicApiAxiosParamCreator(e).initializeSelfServiceBrowserLogoutFlow(t);return(e=n.default,i=o.BASE_PATH)=>{const t=Object.assign(Object.assign({},s.options),{url:i+s.url});return e.request(t)}}))},initializeSelfServiceLoginViaAPIFlow(t,r){return s(this,void 0,void 0,(function*(){const s=yield i.PublicApiAxiosParamCreator(e).initializeSelfServiceLoginViaAPIFlow(t,r);return(e=n.default,i=o.BASE_PATH)=>{const t=Object.assign(Object.assign({},s.options),{url:i+s.url});return e.request(t)}}))},initializeSelfServiceLoginViaBrowserFlow(t){return s(this,void 0,void 0,(function*(){const s=yield i.PublicApiAxiosParamCreator(e).initializeSelfServiceLoginViaBrowserFlow(t);return(e=n.default,i=o.BASE_PATH)=>{const t=Object.assign(Object.assign({},s.options),{url:i+s.url});return e.request(t)}}))},initializeSelfServiceRecoveryViaAPIFlow(t){return s(this,void 0,void 0,(function*(){const s=yield i.PublicApiAxiosParamCreator(e).initializeSelfServiceRecoveryViaAPIFlow(t);return(e=n.default,i=o.BASE_PATH)=>{const t=Object.assign(Object.assign({},s.options),{url:i+s.url});return e.request(t)}}))},initializeSelfServiceRecoveryViaBrowserFlow(t){return s(this,void 0,void 0,(function*(){const s=yield i.PublicApiAxiosParamCreator(e).initializeSelfServiceRecoveryViaBrowserFlow(t);return(e=n.default,i=o.BASE_PATH)=>{const t=Object.assign(Object.assign({},s.options),{url:i+s.url});return e.request(t)}}))},initializeSelfServiceRegistrationViaAPIFlow(t){return s(this,void 0,void 0,(function*(){const s=yield i.PublicApiAxiosParamCreator(e).initializeSelfServiceRegistrationViaAPIFlow(t);return(e=n.default,i=o.BASE_PATH)=>{const t=Object.assign(Object.assign({},s.options),{url:i+s.url});return e.request(t)}}))},initializeSelfServiceRegistrationViaBrowserFlow(t){return s(this,void 0,void 0,(function*(){const s=yield i.PublicApiAxiosParamCreator(e).initializeSelfServiceRegistrationViaBrowserFlow(t);return(e=n.default,i=o.BASE_PATH)=>{const t=Object.assign(Object.assign({},s.options),{url:i+s.url});return e.request(t)}}))},initializeSelfServiceSettingsViaAPIFlow(t){return s(this,void 0,void 0,(function*(){const s=yield i.PublicApiAxiosParamCreator(e).initializeSelfServiceSettingsViaAPIFlow(t);return(e=n.default,i=o.BASE_PATH)=>{const t=Object.assign(Object.assign({},s.options),{url:i+s.url});return e.request(t)}}))},initializeSelfServiceSettingsViaBrowserFlow(t){return s(this,void 0,void 0,(function*(){const s=yield i.PublicApiAxiosParamCreator(e).initializeSelfServiceSettingsViaBrowserFlow(t);return(e=n.default,i=o.BASE_PATH)=>{const t=Object.assign(Object.assign({},s.options),{url:i+s.url});return e.request(t)}}))},initializeSelfServiceVerificationViaAPIFlow(t){return s(this,void 0,void 0,(function*(){const s=yield i.PublicApiAxiosParamCreator(e).initializeSelfServiceVerificationViaAPIFlow(t);return(e=n.default,i=o.BASE_PATH)=>{const t=Object.assign(Object.assign({},s.options),{url:i+s.url});return e.request(t)}}))},initializeSelfServiceVerificationViaBrowserFlow(t){return s(this,void 0,void 0,(function*(){const s=yield i.PublicApiAxiosParamCreator(e).initializeSelfServiceVerificationViaBrowserFlow(t);return(e=n.default,i=o.BASE_PATH)=>{const t=Object.assign(Object.assign({},s.options),{url:i+s.url});return e.request(t)}}))},revokeSession(t,r){return s(this,void 0,void 0,(function*(){const s=yield i.PublicApiAxiosParamCreator(e).revokeSession(t,r);return(e=n.default,i=o.BASE_PATH)=>{const t=Object.assign(Object.assign({},s.options),{url:i+s.url});return e.request(t)}}))},whoami(t,r,a){return s(this,void 0,void 0,(function*(){const s=yield i.PublicApiAxiosParamCreator(e).whoami(t,r,a);return(e=n.default,i=o.BASE_PATH)=>{const t=Object.assign(Object.assign({},s.options),{url:i+s.url});return e.request(t)}}))}}},i.PublicApiFactory=function(e,t,s){return{completeSelfServiceBrowserSettingsOIDCSettingsFlow:r=>i.PublicApiFp(e).completeSelfServiceBrowserSettingsOIDCSettingsFlow(r).then((e=>e(s,t))),completeSelfServiceLoginFlowWithPasswordMethod:(r,n,o)=>i.PublicApiFp(e).completeSelfServiceLoginFlowWithPasswordMethod(r,n,o).then((e=>e(s,t))),completeSelfServiceRecoveryFlowWithLinkMethod:(r,n,o,a)=>i.PublicApiFp(e).completeSelfServiceRecoveryFlowWithLinkMethod(r,n,o,a).then((e=>e(s,t))),completeSelfServiceRegistrationFlowWithPasswordMethod:(r,n,o)=>i.PublicApiFp(e).completeSelfServiceRegistrationFlowWithPasswordMethod(r,n,o).then((e=>e(s,t))),completeSelfServiceSettingsFlowWithPasswordMethod:(r,n,o)=>i.PublicApiFp(e).completeSelfServiceSettingsFlowWithPasswordMethod(r,n,o).then((e=>e(s,t))),completeSelfServiceSettingsFlowWithProfileMethod:(r,n,o)=>i.PublicApiFp(e).completeSelfServiceSettingsFlowWithProfileMethod(r,n,o).then((e=>e(s,t))),completeSelfServiceVerificationFlowWithLinkMethod:(r,n,o,a)=>i.PublicApiFp(e).completeSelfServiceVerificationFlowWithLinkMethod(r,n,o,a).then((e=>e(s,t))),getSchema:(r,n)=>i.PublicApiFp(e).getSchema(r,n).then((e=>e(s,t))),getSelfServiceError:(r,n)=>i.PublicApiFp(e).getSelfServiceError(r,n).then((e=>e(s,t))),getSelfServiceLoginFlow:(r,n)=>i.PublicApiFp(e).getSelfServiceLoginFlow(r,n).then((e=>e(s,t))),getSelfServiceRecoveryFlow:(r,n)=>i.PublicApiFp(e).getSelfServiceRecoveryFlow(r,n).then((e=>e(s,t))),getSelfServiceRegistrationFlow:(r,n)=>i.PublicApiFp(e).getSelfServiceRegistrationFlow(r,n).then((e=>e(s,t))),getSelfServiceSettingsFlow:(r,n)=>i.PublicApiFp(e).getSelfServiceSettingsFlow(r,n).then((e=>e(s,t))),getSelfServiceVerificationFlow:(r,n)=>i.PublicApiFp(e).getSelfServiceVerificationFlow(r,n).then((e=>e(s,t))),initializeSelfServiceBrowserLogoutFlow:r=>i.PublicApiFp(e).initializeSelfServiceBrowserLogoutFlow(r).then((e=>e(s,t))),initializeSelfServiceLoginViaAPIFlow:(r,n)=>i.PublicApiFp(e).initializeSelfServiceLoginViaAPIFlow(r,n).then((e=>e(s,t))),initializeSelfServiceLoginViaBrowserFlow:r=>i.PublicApiFp(e).initializeSelfServiceLoginViaBrowserFlow(r).then((e=>e(s,t))),initializeSelfServiceRecoveryViaAPIFlow:r=>i.PublicApiFp(e).initializeSelfServiceRecoveryViaAPIFlow(r).then((e=>e(s,t))),initializeSelfServiceRecoveryViaBrowserFlow:r=>i.PublicApiFp(e).initializeSelfServiceRecoveryViaBrowserFlow(r).then((e=>e(s,t))),initializeSelfServiceRegistrationViaAPIFlow:r=>i.PublicApiFp(e).initializeSelfServiceRegistrationViaAPIFlow(r).then((e=>e(s,t))),initializeSelfServiceRegistrationViaBrowserFlow:r=>i.PublicApiFp(e).initializeSelfServiceRegistrationViaBrowserFlow(r).then((e=>e(s,t))),initializeSelfServiceSettingsViaAPIFlow:r=>i.PublicApiFp(e).initializeSelfServiceSettingsViaAPIFlow(r).then((e=>e(s,t))),initializeSelfServiceSettingsViaBrowserFlow:r=>i.PublicApiFp(e).initializeSelfServiceSettingsViaBrowserFlow(r).then((e=>e(s,t))),initializeSelfServiceVerificationViaAPIFlow:r=>i.PublicApiFp(e).initializeSelfServiceVerificationViaAPIFlow(r).then((e=>e(s,t))),initializeSelfServiceVerificationViaBrowserFlow:r=>i.PublicApiFp(e).initializeSelfServiceVerificationViaBrowserFlow(r).then((e=>e(s,t))),revokeSession:(r,n)=>i.PublicApiFp(e).revokeSession(r,n).then((e=>e(s,t))),whoami:(r,n,o)=>i.PublicApiFp(e).whoami(r,n,o).then((e=>e(s,t)))}};class l extends o.BaseAPI{completeSelfServiceBrowserSettingsOIDCSettingsFlow(e){return i.PublicApiFp(this.configuration).completeSelfServiceBrowserSettingsOIDCSettingsFlow(e).then((e=>e(this.axios,this.basePath)))}completeSelfServiceLoginFlowWithPasswordMethod(e,t,s){return i.PublicApiFp(this.configuration).completeSelfServiceLoginFlowWithPasswordMethod(e,t,s).then((e=>e(this.axios,this.basePath)))}completeSelfServiceRecoveryFlowWithLinkMethod(e,t,s,r){return i.PublicApiFp(this.configuration).completeSelfServiceRecoveryFlowWithLinkMethod(e,t,s,r).then((e=>e(this.axios,this.basePath)))}completeSelfServiceRegistrationFlowWithPasswordMethod(e,t,s){return i.PublicApiFp(this.configuration).completeSelfServiceRegistrationFlowWithPasswordMethod(e,t,s).then((e=>e(this.axios,this.basePath)))}completeSelfServiceSettingsFlowWithPasswordMethod(e,t,s){return i.PublicApiFp(this.configuration).completeSelfServiceSettingsFlowWithPasswordMethod(e,t,s).then((e=>e(this.axios,this.basePath)))}completeSelfServiceSettingsFlowWithProfileMethod(e,t,s){return i.PublicApiFp(this.configuration).completeSelfServiceSettingsFlowWithProfileMethod(e,t,s).then((e=>e(this.axios,this.basePath)))}completeSelfServiceVerificationFlowWithLinkMethod(e,t,s,r){return i.PublicApiFp(this.configuration).completeSelfServiceVerificationFlowWithLinkMethod(e,t,s,r).then((e=>e(this.axios,this.basePath)))}getSchema(e,t){return i.PublicApiFp(this.configuration).getSchema(e,t).then((e=>e(this.axios,this.basePath)))}getSelfServiceError(e,t){return i.PublicApiFp(this.configuration).getSelfServiceError(e,t).then((e=>e(this.axios,this.basePath)))}getSelfServiceLoginFlow(e,t){return i.PublicApiFp(this.configuration).getSelfServiceLoginFlow(e,t).then((e=>e(this.axios,this.basePath)))}getSelfServiceRecoveryFlow(e,t){return i.PublicApiFp(this.configuration).getSelfServiceRecoveryFlow(e,t).then((e=>e(this.axios,this.basePath)))}getSelfServiceRegistrationFlow(e,t){return i.PublicApiFp(this.configuration).getSelfServiceRegistrationFlow(e,t).then((e=>e(this.axios,this.basePath)))}getSelfServiceSettingsFlow(e,t){return i.PublicApiFp(this.configuration).getSelfServiceSettingsFlow(e,t).then((e=>e(this.axios,this.basePath)))}getSelfServiceVerificationFlow(e,t){return i.PublicApiFp(this.configuration).getSelfServiceVerificationFlow(e,t).then((e=>e(this.axios,this.basePath)))}initializeSelfServiceBrowserLogoutFlow(e){return i.PublicApiFp(this.configuration).initializeSelfServiceBrowserLogoutFlow(e).then((e=>e(this.axios,this.basePath)))}initializeSelfServiceLoginViaAPIFlow(e,t){return i.PublicApiFp(this.configuration).initializeSelfServiceLoginViaAPIFlow(e,t).then((e=>e(this.axios,this.basePath)))}initializeSelfServiceLoginViaBrowserFlow(e){return i.PublicApiFp(this.configuration).initializeSelfServiceLoginViaBrowserFlow(e).then((e=>e(this.axios,this.basePath)))}initializeSelfServiceRecoveryViaAPIFlow(e){return i.PublicApiFp(this.configuration).initializeSelfServiceRecoveryViaAPIFlow(e).then((e=>e(this.axios,this.basePath)))}initializeSelfServiceRecoveryViaBrowserFlow(e){return i.PublicApiFp(this.configuration).initializeSelfServiceRecoveryViaBrowserFlow(e).then((e=>e(this.axios,this.basePath)))}initializeSelfServiceRegistrationViaAPIFlow(e){return i.PublicApiFp(this.configuration).initializeSelfServiceRegistrationViaAPIFlow(e).then((e=>e(this.axios,this.basePath)))}initializeSelfServiceRegistrationViaBrowserFlow(e){return i.PublicApiFp(this.configuration).initializeSelfServiceRegistrationViaBrowserFlow(e).then((e=>e(this.axios,this.basePath)))}initializeSelfServiceSettingsViaAPIFlow(e){return i.PublicApiFp(this.configuration).initializeSelfServiceSettingsViaAPIFlow(e).then((e=>e(this.axios,this.basePath)))}initializeSelfServiceSettingsViaBrowserFlow(e){return i.PublicApiFp(this.configuration).initializeSelfServiceSettingsViaBrowserFlow(e).then((e=>e(this.axios,this.basePath)))}initializeSelfServiceVerificationViaAPIFlow(e){return i.PublicApiFp(this.configuration).initializeSelfServiceVerificationViaAPIFlow(e).then((e=>e(this.axios,this.basePath)))}initializeSelfServiceVerificationViaBrowserFlow(e){return i.PublicApiFp(this.configuration).initializeSelfServiceVerificationViaBrowserFlow(e).then((e=>e(this.axios,this.basePath)))}revokeSession(e,t){return i.PublicApiFp(this.configuration).revokeSession(e,t).then((e=>e(this.axios,this.basePath)))}whoami(e,t,s){return i.PublicApiFp(this.configuration).whoami(e,t,s).then((e=>e(this.axios,this.basePath)))}}i.PublicApi=l,i.VersionApiAxiosParamCreator=function(e){return{getVersion:(i={})=>s(this,void 0,void 0,(function*(){const t=r.parse("/version",!0);let s;e&&(s=e.baseOptions);const n=Object.assign(Object.assign({method:"GET"},s),i);t.query=Object.assign(Object.assign(Object.assign({},t.query),{}),i.query),delete t.search;let o=s&&s.headers?s.headers:{};return n.headers=Object.assign(Object.assign(Object.assign({},{}),o),i.headers),{url:r.format(t),options:n}}))}},i.VersionApiFp=function(e){return{getVersion(t){return s(this,void 0,void 0,(function*(){const s=yield i.VersionApiAxiosParamCreator(e).getVersion(t);return(e=n.default,i=o.BASE_PATH)=>{const t=Object.assign(Object.assign({},s.options),{url:i+s.url});return e.request(t)}}))}}},i.VersionApiFactory=function(e,t,s){return{getVersion:r=>i.VersionApiFp(e).getVersion(r).then((e=>e(s,t)))}};class u extends o.BaseAPI{getVersion(e){return i.VersionApiFp(this.configuration).getVersion(e).then((e=>e(this.axios,this.basePath)))}}i.VersionApi=u}}]);